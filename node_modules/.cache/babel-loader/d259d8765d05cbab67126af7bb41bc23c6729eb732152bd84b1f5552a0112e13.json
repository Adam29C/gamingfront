{"ast":null,"code":"import{createAsyncThunk,createSlice}from\"@reduxjs/toolkit\";import{AllMatchesApi,MatchListApi,SeriesListApi,UserProfileGetApi}from\"../../../Service/user.service\";// import { useNavigate } from \"react-router-dom\";\nexport const getUserProfile=createAsyncThunk(\"User/getUserProfile\",async data=>{try{let{id,token}=data;const res=await UserProfileGetApi(id,token);return await res;}catch(error){}});export const getAllMatches=createAsyncThunk(\"user/getAllMatches\",async token=>{try{const res=await AllMatchesApi(token);return await res;}catch(error){return error;}});export const getMatchList=createAsyncThunk(\"user/getMatchList\",async data=>{console.log(data,\"check data in matchlist\");try{// const res = await MatchListApi(data)\n// return await res\n}catch(error){return error;}});export const getSeriesList=createAsyncThunk(\"user/getSeriesList\",async token=>{// const navigate = useNavigate();\ntry{const res=await SeriesListApi(token);console.log(\"res\",res);return res;}catch(error){console.log(\"error\",error);// if (error.response && error.response.status === 500) {\n//   navigate(\"/login\"); // Replace '/error500' with your desired route\n// }\nthrow error;// Rethrow the error to let Redux Toolkit know that the action has failed\n}});const UserSlice=createSlice({name:\"UserSlice\",initialState:{getUserProfileState:{},getAllMatchListState:[],getMatchListState:[],getSeriesListState:[]},reducers:{},extraReducers:builder=>{builder.addCase(getUserProfile.fulfilled,(state,action)=>{state.getUserProfileState=action.payload;});builder.addCase(getAllMatches.fulfilled,(state,action)=>{state.getAllMatchListState=action.payload;});builder.addCase(getMatchList.fulfilled,(state,action)=>{state.getMatchListState=action.payload;});builder.addCase(getSeriesList.fulfilled,(state,action)=>{state.getSeriesListState=action.payload;});}});export default UserSlice;","map":{"version":3,"names":["createAsyncThunk","createSlice","AllMatchesApi","MatchListApi","SeriesListApi","UserProfileGetApi","getUserProfile","data","id","token","res","error","getAllMatches","getMatchList","console","log","getSeriesList","UserSlice","name","initialState","getUserProfileState","getAllMatchListState","getMatchListState","getSeriesListState","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload"],"sources":["D:/Gaming/gaming/frontend/src/Components/Redux/Slice/User/user.slice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport {\r\n  AllMatchesApi,\r\n  MatchListApi,\r\n  SeriesListApi,\r\n  UserProfileGetApi,\r\n} from \"../../../Service/user.service\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n\r\nexport const getUserProfile = createAsyncThunk(\r\n  \"User/getUserProfile\",\r\n  async (data) => {\r\n    try {\r\n      let { id, token } = data;\r\n      const res = await UserProfileGetApi(id, token);\r\n      return await res;\r\n    } catch (error) {}\r\n  }\r\n);\r\n\r\nexport const getAllMatches = createAsyncThunk(\r\n  \"user/getAllMatches\",\r\n  async (token) => {\r\n    try {\r\n      const res = await AllMatchesApi(token);\r\n\r\n      return await res;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n);\r\n\r\nexport const getMatchList = createAsyncThunk(\r\n  \"user/getMatchList\",\r\n  async (data) => {\r\n    console.log(data, \"check data in matchlist\");\r\n    try {\r\n      // const res = await MatchListApi(data)\r\n      // return await res\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n);\r\n\r\nexport const getSeriesList = createAsyncThunk(\r\n  \"user/getSeriesList\",\r\n  async (token) => {\r\n    // const navigate = useNavigate();\r\n\r\n    try {\r\n      const res = await SeriesListApi(token);\r\n\r\n      console.log(\"res\", res);\r\n\r\n      return res;\r\n    } catch (error) {\r\n      console.log(\"error\", error);\r\n\r\n      // if (error.response && error.response.status === 500) {\r\n      //   navigate(\"/login\"); // Replace '/error500' with your desired route\r\n      // }\r\n\r\n      throw error; // Rethrow the error to let Redux Toolkit know that the action has failed\r\n    }\r\n  }\r\n);\r\n\r\nconst UserSlice = createSlice({\r\n  name: \"UserSlice\",\r\n  initialState: {\r\n    getUserProfileState: {},\r\n    getAllMatchListState: [],\r\n    getMatchListState: [],\r\n    getSeriesListState: [],\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder.addCase(getUserProfile.fulfilled, (state, action) => {\r\n      state.getUserProfileState = action.payload;\r\n    });\r\n    builder.addCase(getAllMatches.fulfilled, (state, action) => {\r\n      state.getAllMatchListState = action.payload;\r\n    });\r\n    builder.addCase(getMatchList.fulfilled, (state, action) => {\r\n      state.getMatchListState = action.payload;\r\n    });\r\n    builder.addCase(getSeriesList.fulfilled, (state, action) => {\r\n      state.getSeriesListState = action.payload;\r\n    });\r\n  },\r\n});\r\n\r\nexport default UserSlice;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}