{"ast":null,"code":"var _jsxFileName = \"D:\\\\Gaming\\\\gaming\\\\frontend\\\\src\\\\Components\\\\Pages\\\\Auth\\\\SignUpUser.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Content from \"../../Layout/Content/Content1\";\nimport Formikform from \"../../Helpers/Form\";\nimport { useFormik } from \"formik\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Users = () => {\n  _s();\n  const formik = useFormik({\n    initialValues: {\n      panel_name: \"\",\n      domain: \"\",\n      port: \"\",\n      key: \"\",\n      ip_address: \"\",\n      is_active: 1,\n      is_expired: 0,\n      theme_id: \"\",\n      db_url: \"\",\n      db_name: \"\",\n      broker_id: [],\n      Create_Strategy: false,\n      Option_chain: false,\n      Strategy_plan: false,\n      backend_rul: \"\"\n    },\n    validate: values => {\n      const errors = {};\n\n      // if (!values.panel_name && formik.touched.panel_name) {\n      //   errors.panel_name = valid_err.PANEL_NAME_ERROR;\n      // }\n\n      // if (!values.domain) {\n      //   errors.domain = valid_err.DOMAIN_ERROR;\n      // }\n\n      // if (!values.port) {\n      //   errors.port = valid_err.PORT_ERROR;\n      // }\n\n      // if (!values.key) {\n      //   errors.key = valid_err.KEY_ERROR;\n      // }\n\n      // if (!values.db_url) {\n      //   errors.db_url = valid_err.DBURL_ERROR;\n      // }\n\n      // if (!values.db_name) {\n      //   errors.db_name = valid_err.DBNAME_ERROR;\n      // }\n\n      // if (!values.backend_rul) {\n      //   errors.backend_rul = valid_err.DBNAME_ERROR;\n      // }\n\n      return errors;\n    },\n    onSubmit: async values => {\n      const req = {\n        // panel_name: values.panel_name,\n        // domain: values.domain,\n        // port: values.port,\n        // key: values.key,\n        // ip_address: values.ip_address,\n        // theme_id: values.theme_id,\n        // db_url: values.db_url,\n        // db_name: values.db_name,\n        // broker_id: state1,\n        // Create_Strategy:\n        //   values.Create_Strategy && values.Create_Strategy ? 1 : 0,\n        // Option_chain: values.Option_chain && values.Option_chain ? 1 : 0,\n        // Strategy_plan: values.Strategy_plan && values.Strategy_plan ? 1 : 0,\n        // backend_rul: values.backend_rul,\n      };\n\n      // await dispatch(Add_Panel_data({ req: req, token: user_token }))\n      //   .unwrap()\n      //   .then((response) => {\n      //     if (response.status === 409) {\n      //       toast.error(response.data.msg);\n      //     } else if (response.status) {\n      //       toast.success(response.msg);\n\n      //       setTimeout(() => {\n      //         navigate(\"/super/alladmins\");\n      //       }, 1000);\n      //     } else if (!response.status) {\n      //       toast.error(response.msg);\n      //     }\n      //   });\n    }\n  });\n  const fields = [{\n    name: \"name\",\n    label: \"Name\",\n    type: \"text\",\n    label_size: 12,\n    col_size: 12\n  }, {\n    name: \"mobile\",\n    label: \"Mobile\",\n    type: \"text\",\n    label_size: 12,\n    col_size: 12\n  }, {\n    name: \"password\",\n    label: \"Password\",\n    type: \"password\",\n    label_size: 12,\n    col_size: 12\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Content, {\n      title: \"Sign Up User\",\n      col_size: 7,\n      responsive_col: \"col-md-8 col-lg-6\",\n      children: [/*#__PURE__*/_jsxDEV(Formikform, {\n        fieldtype: fields.filter(field => !field.showWhen),\n        formik: formik,\n        btn_name: \"Create My Account \",\n        additional_field: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: formik.errors.title && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: \"red\"\n            },\n            children: formik.errors.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }, this)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center\",\n        \"mt-5\": true,\n        children: \"Already have an account?Sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Users, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n_c = Users;\nexport default Users;\nvar _c;\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["React","Content","Formikform","useFormik","jsxDEV","_jsxDEV","Fragment","_Fragment","Users","_s","formik","initialValues","panel_name","domain","port","key","ip_address","is_active","is_expired","theme_id","db_url","db_name","broker_id","Create_Strategy","Option_chain","Strategy_plan","backend_rul","validate","values","errors","onSubmit","req","fields","name","label","type","label_size","col_size","children","title","responsive_col","fieldtype","filter","field","showWhen","btn_name","additional_field","style","color","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["D:/Gaming/gaming/frontend/src/Components/Pages/Auth/SignUpUser.js"],"sourcesContent":["import React from \"react\";\r\nimport Content from \"../../Layout/Content/Content1\";\r\nimport Formikform from \"../../Helpers/Form\";\r\nimport { useFormik } from \"formik\";\r\n\r\nconst Users = () => {\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      panel_name: \"\",\r\n      domain: \"\",\r\n      port: \"\",\r\n      key: \"\",\r\n      ip_address: \"\",\r\n      is_active: 1,\r\n      is_expired: 0,\r\n      theme_id: \"\",\r\n      db_url: \"\",\r\n      db_name: \"\",\r\n      broker_id: [],\r\n      Create_Strategy: false,\r\n      Option_chain: false,\r\n      Strategy_plan: false,\r\n      backend_rul: \"\",\r\n    },\r\n\r\n    validate: (values) => {\r\n      const errors = {};\r\n\r\n      // if (!values.panel_name && formik.touched.panel_name) {\r\n      //   errors.panel_name = valid_err.PANEL_NAME_ERROR;\r\n      // }\r\n\r\n      // if (!values.domain) {\r\n      //   errors.domain = valid_err.DOMAIN_ERROR;\r\n      // }\r\n\r\n      // if (!values.port) {\r\n      //   errors.port = valid_err.PORT_ERROR;\r\n      // }\r\n\r\n      // if (!values.key) {\r\n      //   errors.key = valid_err.KEY_ERROR;\r\n      // }\r\n\r\n      // if (!values.db_url) {\r\n      //   errors.db_url = valid_err.DBURL_ERROR;\r\n      // }\r\n\r\n      // if (!values.db_name) {\r\n      //   errors.db_name = valid_err.DBNAME_ERROR;\r\n      // }\r\n\r\n      // if (!values.backend_rul) {\r\n      //   errors.backend_rul = valid_err.DBNAME_ERROR;\r\n      // }\r\n\r\n      return errors;\r\n    },\r\n    onSubmit: async (values) => {\r\n      const req = {\r\n        // panel_name: values.panel_name,\r\n        // domain: values.domain,\r\n        // port: values.port,\r\n        // key: values.key,\r\n        // ip_address: values.ip_address,\r\n        // theme_id: values.theme_id,\r\n        // db_url: values.db_url,\r\n        // db_name: values.db_name,\r\n        // broker_id: state1,\r\n        // Create_Strategy:\r\n        //   values.Create_Strategy && values.Create_Strategy ? 1 : 0,\r\n        // Option_chain: values.Option_chain && values.Option_chain ? 1 : 0,\r\n        // Strategy_plan: values.Strategy_plan && values.Strategy_plan ? 1 : 0,\r\n        // backend_rul: values.backend_rul,\r\n      };\r\n\r\n      // await dispatch(Add_Panel_data({ req: req, token: user_token }))\r\n      //   .unwrap()\r\n      //   .then((response) => {\r\n      //     if (response.status === 409) {\r\n      //       toast.error(response.data.msg);\r\n      //     } else if (response.status) {\r\n      //       toast.success(response.msg);\r\n\r\n      //       setTimeout(() => {\r\n      //         navigate(\"/super/alladmins\");\r\n      //       }, 1000);\r\n      //     } else if (!response.status) {\r\n      //       toast.error(response.msg);\r\n      //     }\r\n      //   });\r\n    },\r\n  });\r\n\r\n  const fields = [\r\n    {\r\n      name: \"name\",\r\n      label: \"Name\",\r\n      type: \"text\",\r\n      label_size: 12,\r\n      col_size: 12,\r\n    },\r\n    {\r\n      name: \"mobile\",\r\n      label: \"Mobile\",\r\n      type: \"text\",\r\n      label_size: 12,\r\n      col_size: 12,\r\n    },\r\n    {\r\n      name: \"password\",\r\n      label: \"Password\",\r\n      type: \"password\",\r\n      label_size: 12,\r\n      col_size: 12,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Content\r\n        title=\"Sign Up User\"\r\n        col_size={7}\r\n        responsive_col={\"col-md-8 col-lg-6\"}\r\n      >\r\n        <Formikform\r\n          fieldtype={fields.filter((field) => !field.showWhen)}\r\n          formik={formik}\r\n          btn_name=\"Create My Account \"\r\n          additional_field={\r\n            <>\r\n              {formik.errors.title && (\r\n                <div style={{ color: \"red\" }}>{formik.errors.title}</div>\r\n              )}\r\n            </>\r\n          }\r\n        />\r\n\r\n        <p className=\"text-center\" mt-5>Already have an account?Sign in</p>\r\n      </Content>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}