{"ast":null,"code":"var _jsxFileName = \"D:\\\\Gaming\\\\gaming\\\\frontend\\\\src\\\\Components\\\\Pages\\\\Auth\\\\ForgotPassword.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Content from \"../../Layout/Content/Content1\";\nimport Formikform from \"../../Helpers/Form\";\nimport * as valid_err from \"../../Utils/Common_Msg\";\nimport { Name_regex, Password_Rejex, Mobile_regex } from \"../../Utils/Valid_Rejex\";\nimport { useFormik } from \"formik\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ForgetPassword = () => {\n  _s();\n  const isValidPassword = mobile => {\n    return Password_Rejex(mobile);\n  };\n  const formik = useFormik({\n    initialValues: {\n      panel_name: \"\"\n    },\n    validate: values => {\n      const errors = {};\n      if (!values.password) {\n        errors.password = valid_err.PASSWORD_ERROR;\n      } else if (!isValidPassword(values.password)) {\n        errors.password = valid_err.PASSWORD__LENGTH_ERROR;\n      }\n      return errors;\n    },\n    onSubmit: async values => {\n      const req = {\n        // panel_name: values.panel_name,\n      };\n\n      // await dispatch(Add_Panel_data({ req: req, token: user_token }))\n      //   .unwrap()\n      //   .then((response) => {\n      //     if (response.status === 409) {\n      //       toast.error(response.data.msg);\n      //     } else if (response.status) {\n      //       toast.success(response.msg);\n\n      //       setTimeout(() => {\n      //         navigate(\"/super/alladmins\");\n      //       }, 1000);\n      //     } else if (!response.status) {\n      //       toast.error(response.msg);\n      //     }\n      //   });\n    }\n  });\n  const fields = [{\n    name: \"Contact\",\n    label: \"Panel Name\",\n    type: \"text\",\n    label_size: 12,\n    col_size: 12\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Content, {\n      title: \"Forget Password\",\n      responsive_col: \"col-md-4 col-lg-6\",\n      children: /*#__PURE__*/_jsxDEV(Formikform, {\n        button_Size: \"col-12\",\n        fieldtype: fields.filter(field => !field.showWhen),\n        formik: formik,\n        btn_name: \"Add Panel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(ForgetPassword, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n_c = ForgetPassword;\nexport default ForgetPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgetPassword\");","map":{"version":3,"names":["React","Content","Formikform","valid_err","Name_regex","Password_Rejex","Mobile_regex","useFormik","jsxDEV","_jsxDEV","Fragment","_Fragment","ForgetPassword","_s","isValidPassword","mobile","formik","initialValues","panel_name","validate","values","errors","password","PASSWORD_ERROR","PASSWORD__LENGTH_ERROR","onSubmit","req","fields","name","label","type","label_size","col_size","children","title","responsive_col","button_Size","fieldtype","filter","field","showWhen","btn_name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Gaming/gaming/frontend/src/Components/Pages/Auth/ForgotPassword.js"],"sourcesContent":["import React from \"react\";\r\nimport Content from \"../../Layout/Content/Content1\";\r\nimport Formikform from \"../../Helpers/Form\";\r\nimport * as valid_err from \"../../Utils/Common_Msg\";\r\nimport {\r\n  Name_regex,\r\n  Password_Rejex,\r\n  Mobile_regex,\r\n} from \"../../Utils/Valid_Rejex\";\r\nimport { useFormik } from \"formik\";\r\n\r\nconst ForgetPassword = () => {\r\n  const isValidPassword = (mobile) => {\r\n    return Password_Rejex(mobile);\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      panel_name: \"\",\r\n    },\r\n\r\n    validate: (values) => {\r\n      const errors = {};\r\n\r\n      if (!values.password) {\r\n        errors.password = valid_err.PASSWORD_ERROR;\r\n      } else if (!isValidPassword(values.password)) {\r\n        errors.password = valid_err.PASSWORD__LENGTH_ERROR;\r\n      }\r\n\r\n      return errors;\r\n    },\r\n    onSubmit: async (values) => {\r\n      const req = {\r\n        // panel_name: values.panel_name,\r\n      };\r\n\r\n      // await dispatch(Add_Panel_data({ req: req, token: user_token }))\r\n      //   .unwrap()\r\n      //   .then((response) => {\r\n      //     if (response.status === 409) {\r\n      //       toast.error(response.data.msg);\r\n      //     } else if (response.status) {\r\n      //       toast.success(response.msg);\r\n\r\n      //       setTimeout(() => {\r\n      //         navigate(\"/super/alladmins\");\r\n      //       }, 1000);\r\n      //     } else if (!response.status) {\r\n      //       toast.error(response.msg);\r\n      //     }\r\n      //   });\r\n    },\r\n  });\r\n\r\n  const fields = [\r\n    {\r\n      name: \"Contact\",\r\n      label: \"Panel Name\",\r\n      type: \"text\",\r\n      label_size: 12,\r\n      col_size: 12,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Content title=\"Forget Password\" responsive_col={\"col-md-4 col-lg-6\"}>\r\n        <Formikform\r\n          button_Size=\"col-12\"\r\n          fieldtype={fields.filter((field) => !field.showWhen)}\r\n          formik={formik}\r\n          btn_name=\"Add Panel\"\r\n        />\r\n      </Content>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ForgetPassword;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,+BAA+B;AACnD,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,OAAO,KAAKC,SAAS,MAAM,wBAAwB;AACnD,SACEC,UAAU,EACVC,cAAc,EACdC,YAAY,QACP,yBAAyB;AAChC,SAASC,SAAS,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,eAAe,GAAIC,MAAM,IAAK;IAClC,OAAOV,cAAc,CAACU,MAAM,CAAC;EAC/B,CAAC;EAED,MAAMC,MAAM,GAAGT,SAAS,CAAC;IACvBU,aAAa,EAAE;MACbC,UAAU,EAAE;IACd,CAAC;IAEDC,QAAQ,EAAGC,MAAM,IAAK;MACpB,MAAMC,MAAM,GAAG,CAAC,CAAC;MAEjB,IAAI,CAACD,MAAM,CAACE,QAAQ,EAAE;QACpBD,MAAM,CAACC,QAAQ,GAAGnB,SAAS,CAACoB,cAAc;MAC5C,CAAC,MAAM,IAAI,CAACT,eAAe,CAACM,MAAM,CAACE,QAAQ,CAAC,EAAE;QAC5CD,MAAM,CAACC,QAAQ,GAAGnB,SAAS,CAACqB,sBAAsB;MACpD;MAEA,OAAOH,MAAM;IACf,CAAC;IACDI,QAAQ,EAAE,MAAOL,MAAM,IAAK;MAC1B,MAAMM,GAAG,GAAG;QACV;MAAA,CACD;;MAED;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;IACF;EACF,CAAC,CAAC;EAEF,MAAMC,MAAM,GAAG,CACb;IACEC,IAAI,EAAE,SAAS;IACfC,KAAK,EAAE,YAAY;IACnBC,IAAI,EAAE,MAAM;IACZC,UAAU,EAAE,EAAE;IACdC,QAAQ,EAAE;EACZ,CAAC,CACF;EAED,oBACEvB,OAAA,CAAAE,SAAA;IAAAsB,QAAA,eACExB,OAAA,CAACR,OAAO;MAACiC,KAAK,EAAC,iBAAiB;MAACC,cAAc,EAAE,mBAAoB;MAAAF,QAAA,eACnExB,OAAA,CAACP,UAAU;QACTkC,WAAW,EAAC,QAAQ;QACpBC,SAAS,EAAEV,MAAM,CAACW,MAAM,CAAEC,KAAK,IAAK,CAACA,KAAK,CAACC,QAAQ,CAAE;QACrDxB,MAAM,EAAEA,MAAO;QACfyB,QAAQ,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK;EAAC,gBACV,CAAC;AAEP,CAAC;AAAChC,EAAA,CAlEID,cAAc;EAAA,QAKHL,SAAS;AAAA;AAAAuC,EAAA,GALpBlC,cAAc;AAoEpB,eAAeA,cAAc;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}