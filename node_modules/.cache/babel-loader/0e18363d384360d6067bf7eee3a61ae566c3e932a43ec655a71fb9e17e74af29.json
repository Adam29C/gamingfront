{"ast":null,"code":"var _jsxFileName = \"D:\\\\Gaming\\\\gaming\\\\frontend\\\\src\\\\Components\\\\Pages\\\\SuperAdmin\\\\profile\\\\ChangePassword.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Formikform from \"../../../Helpers/Form\";\nimport * as valid_err from \"../../../Utils/Common_Msg\";\nimport { useFormik } from \"formik\";\nimport ToastButton from \"../../../Helpers/Toast\";\nimport { ChangePasswordApi } from \"../../../Service/admin.service\";\nimport toast from \"react-hot-toast\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChangePassword = () => {\n  _s();\n  const token = localStorage.getItem(\"token\");\n  const user_details = JSON.parse(localStorage.getItem(\"user_details\"));\n  const formik = useFormik({\n    initialValues: {\n      old_password: \"\",\n      new_password: \"\",\n      confirm_password: \"\"\n    },\n    validate: values => {\n      const errors = {};\n      if (!values.old_password) {\n        errors.old_password = valid_err.OLD_PASSWORD_ERROR;\n      }\n      if (!values.new_password) {\n        errors.new_password = valid_err.NEW_PASSWORD_ERROR;\n      }\n      if (!values.confirm_password) {\n        errors.confirm_password = valid_err.CONFIRM_PASSWORD_ERROR;\n      } else if (values.confirm_password !== values.new_password) {\n        errors.confirm_password = valid_err.CONFIRM_AND_NEW_PASSWORD_ERROR;\n      }\n      return errors;\n    },\n    onSubmit: async values => {\n      try {\n        const data = {\n          user_id: user_details === null || user_details === void 0 ? void 0 : user_details.id,\n          old_password: values.old_password,\n          new_password: values.new_password\n        };\n        const response = await ChangePasswordApi(data, token);\n        if (response !== null && response !== void 0 && response.status) {\n          var _response$data;\n          toast.success(response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.msg);\n        }\n      } catch (error) {\n        toast.error(error.message);\n      }\n    }\n  });\n  const fields = [{\n    name: \"old_password\",\n    label: \"Old Password\",\n    type: \"text\",\n    label_size: 12,\n    col_size: 12\n  }, {\n    name: \"new_password\",\n    label: \"New Password\",\n    type: \"text\",\n    label_size: 12,\n    col_size: 12\n  }, {\n    name: \"confirm_password\",\n    label: \"Confirm Password\",\n    type: \"text\",\n    label_size: 12,\n    col_size: 12\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" card col-12 col-md-6 d-flex justify-content-center align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"change-pass-title my-3\",\n        children: \"Change Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formikform, {\n        fieldtype: fields.filter(field => !field.showWhen),\n        formik: formik,\n        btn_name: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToastButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(ChangePassword, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n_c = ChangePassword;\nexport default ChangePassword;\nvar _c;\n$RefreshReg$(_c, \"ChangePassword\");","map":{"version":3,"names":["React","Formikform","valid_err","useFormik","ToastButton","ChangePasswordApi","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","ChangePassword","_s","token","localStorage","getItem","user_details","JSON","parse","formik","initialValues","old_password","new_password","confirm_password","validate","values","errors","OLD_PASSWORD_ERROR","NEW_PASSWORD_ERROR","CONFIRM_PASSWORD_ERROR","CONFIRM_AND_NEW_PASSWORD_ERROR","onSubmit","data","user_id","id","response","status","_response$data","success","msg","error","message","fields","name","label","type","label_size","col_size","children","className","fileName","_jsxFileName","lineNumber","columnNumber","fieldtype","filter","field","showWhen","btn_name","_c","$RefreshReg$"],"sources":["D:/Gaming/gaming/frontend/src/Components/Pages/SuperAdmin/profile/ChangePassword.js"],"sourcesContent":["import React from \"react\";\r\nimport Formikform from \"../../../Helpers/Form\";\r\nimport * as valid_err from \"../../../Utils/Common_Msg\";\r\nimport { useFormik } from \"formik\";\r\nimport ToastButton from \"../../../Helpers/Toast\";\r\nimport { ChangePasswordApi } from \"../../../Service/admin.service\";\r\nimport toast from \"react-hot-toast\";\r\n\r\nconst ChangePassword = () => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const user_details = JSON.parse(localStorage.getItem(\"user_details\"))\r\n  \r\n  const formik = useFormik({\r\n    initialValues: {\r\n      old_password: \"\",\r\n      new_password: \"\",\r\n      confirm_password: \"\",\r\n    },\r\n\r\n    validate: (values) => {\r\n      const errors = {};\r\n\r\n      if (!values.old_password) {\r\n        errors.old_password = valid_err.OLD_PASSWORD_ERROR;\r\n      }\r\n\r\n      if (!values.new_password) {\r\n        errors.new_password = valid_err.NEW_PASSWORD_ERROR;\r\n      }\r\n\r\n      if (!values.confirm_password) {\r\n        errors.confirm_password = valid_err.CONFIRM_PASSWORD_ERROR;\r\n      } else if (values.confirm_password !== values.new_password) {\r\n        errors.confirm_password = valid_err.CONFIRM_AND_NEW_PASSWORD_ERROR;\r\n      }\r\n\r\n      return errors;\r\n    },\r\n    onSubmit: async (values) => {\r\n      try {\r\n        const data = {\r\n          user_id:user_details?.id,\r\n          old_password: values.old_password,\r\n          new_password: values.new_password,\r\n        };\r\n\r\n        const response = await ChangePasswordApi(data, token);\r\n        if (response?.status) {\r\n          toast.success(response?.data?.msg);\r\n        }\r\n      } catch (error) {\r\n        toast.error(error.message);\r\n      }\r\n    },\r\n  });\r\n\r\n  const fields = [\r\n    {\r\n      name: \"old_password\",\r\n      label: \"Old Password\",\r\n      type: \"text\",\r\n      label_size: 12,\r\n      col_size: 12,\r\n    },\r\n    {\r\n      name: \"new_password\",\r\n      label: \"New Password\",\r\n      type: \"text\",\r\n      label_size: 12,\r\n      col_size: 12,\r\n    },\r\n    {\r\n      name: \"confirm_password\",\r\n      label: \"Confirm Password\",\r\n      type: \"text\",\r\n      label_size: 12,\r\n      col_size: 12,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <div className=\" card col-12 col-md-6 d-flex justify-content-center align-items-center\">\r\n        <h1 className=\"change-pass-title my-3\">Change Password</h1>\r\n        <Formikform\r\n          fieldtype={fields.filter((field) => !field.showWhen)}\r\n          formik={formik}\r\n          btn_name=\"Update\"\r\n        />\r\n        <ToastButton />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChangePassword;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,uBAAuB;AAC9C,OAAO,KAAKC,SAAS,MAAM,2BAA2B;AACtD,SAASC,SAAS,QAAQ,QAAQ;AAClC,OAAOC,WAAW,MAAM,wBAAwB;AAChD,SAASC,iBAAiB,QAAQ,gCAAgC;AAClE,OAAOC,KAAK,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEpC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACJ,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,CAAC;EAErE,MAAMI,MAAM,GAAGhB,SAAS,CAAC;IACvBiB,aAAa,EAAE;MACbC,YAAY,EAAE,EAAE;MAChBC,YAAY,EAAE,EAAE;MAChBC,gBAAgB,EAAE;IACpB,CAAC;IAEDC,QAAQ,EAAGC,MAAM,IAAK;MACpB,MAAMC,MAAM,GAAG,CAAC,CAAC;MAEjB,IAAI,CAACD,MAAM,CAACJ,YAAY,EAAE;QACxBK,MAAM,CAACL,YAAY,GAAGnB,SAAS,CAACyB,kBAAkB;MACpD;MAEA,IAAI,CAACF,MAAM,CAACH,YAAY,EAAE;QACxBI,MAAM,CAACJ,YAAY,GAAGpB,SAAS,CAAC0B,kBAAkB;MACpD;MAEA,IAAI,CAACH,MAAM,CAACF,gBAAgB,EAAE;QAC5BG,MAAM,CAACH,gBAAgB,GAAGrB,SAAS,CAAC2B,sBAAsB;MAC5D,CAAC,MAAM,IAAIJ,MAAM,CAACF,gBAAgB,KAAKE,MAAM,CAACH,YAAY,EAAE;QAC1DI,MAAM,CAACH,gBAAgB,GAAGrB,SAAS,CAAC4B,8BAA8B;MACpE;MAEA,OAAOJ,MAAM;IACf,CAAC;IACDK,QAAQ,EAAE,MAAON,MAAM,IAAK;MAC1B,IAAI;QACF,MAAMO,IAAI,GAAG;UACXC,OAAO,EAACjB,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEkB,EAAE;UACxBb,YAAY,EAAEI,MAAM,CAACJ,YAAY;UACjCC,YAAY,EAAEG,MAAM,CAACH;QACvB,CAAC;QAED,MAAMa,QAAQ,GAAG,MAAM9B,iBAAiB,CAAC2B,IAAI,EAAEnB,KAAK,CAAC;QACrD,IAAIsB,QAAQ,aAARA,QAAQ,eAARA,QAAQ,CAAEC,MAAM,EAAE;UAAA,IAAAC,cAAA;UACpB/B,KAAK,CAACgC,OAAO,CAACH,QAAQ,aAARA,QAAQ,wBAAAE,cAAA,GAARF,QAAQ,CAAEH,IAAI,cAAAK,cAAA,uBAAdA,cAAA,CAAgBE,GAAG,CAAC;QACpC;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdlC,KAAK,CAACkC,KAAK,CAACA,KAAK,CAACC,OAAO,CAAC;MAC5B;IACF;EACF,CAAC,CAAC;EAEF,MAAMC,MAAM,GAAG,CACb;IACEC,IAAI,EAAE,cAAc;IACpBC,KAAK,EAAE,cAAc;IACrBC,IAAI,EAAE,MAAM;IACZC,UAAU,EAAE,EAAE;IACdC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEJ,IAAI,EAAE,cAAc;IACpBC,KAAK,EAAE,cAAc;IACrBC,IAAI,EAAE,MAAM;IACZC,UAAU,EAAE,EAAE;IACdC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEJ,IAAI,EAAE,kBAAkB;IACxBC,KAAK,EAAE,kBAAkB;IACzBC,IAAI,EAAE,MAAM;IACZC,UAAU,EAAE,EAAE;IACdC,QAAQ,EAAE;EACZ,CAAC,CACF;EAED,oBACEvC,OAAA,CAAAE,SAAA;IAAAsC,QAAA,eACExC,OAAA;MAAKyC,SAAS,EAAC,wEAAwE;MAAAD,QAAA,gBACrFxC,OAAA;QAAIyC,SAAS,EAAC,wBAAwB;QAAAD,QAAA,EAAC;MAAe;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3D7C,OAAA,CAACP,UAAU;QACTqD,SAAS,EAAEZ,MAAM,CAACa,MAAM,CAAEC,KAAK,IAAK,CAACA,KAAK,CAACC,QAAQ,CAAE;QACrDtC,MAAM,EAAEA,MAAO;QACfuC,QAAQ,EAAC;MAAQ;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB,CAAC,eACF7C,OAAA,CAACJ,WAAW;QAAA8C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ;EAAC,gBACN,CAAC;AAEP,CAAC;AAACzC,EAAA,CArFID,cAAc;EAAA,QAIHR,SAAS;AAAA;AAAAwD,EAAA,GAJpBhD,cAAc;AAuFpB,eAAeA,cAAc;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}