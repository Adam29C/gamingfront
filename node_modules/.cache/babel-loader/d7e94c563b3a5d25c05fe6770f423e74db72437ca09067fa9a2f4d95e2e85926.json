{"ast":null,"code":"var _jsxFileName = \"D:\\\\Gaming\\\\gaming\\\\frontend\\\\src\\\\Components\\\\Pages\\\\Auth\\\\ForgotPassword.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Content from \"../../../Layout/Content/Content\";\nimport Formikform from \"../../../Helpers/Form\";\n// import * as valid_err from \"../../../Utils/Common_Messages\";\nimport { useFormik } from \"formik\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ForgetPassword = () => {\n  _s();\n  const formik = useFormik({\n    initialValues: {\n      panel_name: \"\"\n    },\n    validate: values => {\n      const errors = {};\n      if (!values.password) {\n        errors.password = valid_err.PASSWORD_ERROR;\n      } else if (!isValidPassword(values.password)) {\n        errors.password = valid_err.PASSWORD__LENGTH_ERROR;\n      }\n      // if (!values.domain) {\n      //   errors.domain = valid_err.DOMAIN_ERROR;\n      // }\n\n      // if (!values.port) {\n      //   errors.port = valid_err.PORT_ERROR;\n      // }\n\n      // if (!values.key) {\n      //   errors.key = valid_err.KEY_ERROR;\n      // }\n\n      // if (!values.db_url) {\n      //   errors.db_url = valid_err.DBURL_ERROR;\n      // }\n\n      // if (!values.db_name) {\n      //   errors.db_name = valid_err.DBNAME_ERROR;\n      // }\n\n      // if (!values.backend_rul) {\n      //   errors.backend_rul = valid_err.DBNAME_ERROR;\n      // }\n\n      return errors;\n    },\n    onSubmit: async values => {\n      const req = {\n        // panel_name: values.panel_name,\n        // domain: values.domain,\n        // port: values.port,\n        // key: values.key,\n        // ip_address: values.ip_address,\n        // theme_id: values.theme_id,\n        // db_url: values.db_url,\n        // db_name: values.db_name,\n        // broker_id: state1,\n        // Create_Strategy:\n        //   values.Create_Strategy && values.Create_Strategy ? 1 : 0,\n        // Option_chain: values.Option_chain && values.Option_chain ? 1 : 0,\n        // Strategy_plan: values.Strategy_plan && values.Strategy_plan ? 1 : 0,\n        // backend_rul: values.backend_rul,\n      };\n\n      // await dispatch(Add_Panel_data({ req: req, token: user_token }))\n      //   .unwrap()\n      //   .then((response) => {\n      //     if (response.status === 409) {\n      //       toast.error(response.data.msg);\n      //     } else if (response.status) {\n      //       toast.success(response.msg);\n\n      //       setTimeout(() => {\n      //         navigate(\"/super/alladmins\");\n      //       }, 1000);\n      //     } else if (!response.status) {\n      //       toast.error(response.msg);\n      //     }\n      //   });\n    }\n  });\n  const fields = [{\n    name: \"panel_name\",\n    label: \"Panel Name\",\n    type: \"text\",\n    label_size: 12,\n    col_size: 6\n  }, {\n    name: \"domain\",\n    label: \"Domain\",\n    type: \"text\",\n    label_size: 12,\n    col_size: 6\n  }, {\n    name: \"port\",\n    label: \"Port\",\n    type: \"text\",\n    label_size: 12,\n    col_size: 6\n  }, {\n    name: \"key\",\n    label: \"key\",\n    type: \"text\",\n    label_size: 12,\n    col_size: 6\n  }, {\n    name: \"ip_address\",\n    label: \"Ip Address\",\n    type: \"text\",\n    label_size: 12,\n    col_size: 6\n  }, {\n    name: \"db_url\",\n    label: \"Database Url\",\n    type: \"text\",\n    label_size: 12,\n    col_size: 6\n  }, {\n    name: \"db_name\",\n    label: \"Database Name\",\n    type: \"text\",\n    label_size: 12,\n    col_size: 6\n  }, {\n    name: \"backend_rul\",\n    label: \"Backend Url\",\n    type: \"text\",\n    label_size: 12,\n    col_size: 12\n  }, {\n    name: \"Create_Strategy\",\n    label: \"Create Strategy\",\n    type: \"checkbox\",\n    label_size: 12,\n    col_size: 3,\n    check_box_true: formik.values.Create_Strategy ? true : false\n  }, {\n    name: \"Option_chain\",\n    label: \"Option Chain\",\n    type: \"checkbox\",\n    label_size: 12,\n    col_size: 3,\n    check_box_true: formik.values.Option_chain ? true : false\n  }, {\n    name: \"Strategy_plan\",\n    label: \"Strategy Plan\",\n    type: \"checkbox\",\n    label_size: 12,\n    col_size: 3,\n    check_box_true: formik.values.Strategy_plan ? true : false\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Content, {\n      title: \"Add Users\",\n      col_size: 12,\n      children: /*#__PURE__*/_jsxDEV(Formikform, {\n        fieldtype: fields.filter(field => !field.showWhen),\n        formik: formik,\n        btn_name: \"Add Panel\",\n        additional_field: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            children: \"All Brokers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this), formik.errors.title && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: \"red\"\n            },\n            children: formik.errors.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(ForgetPassword, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n_c = ForgetPassword;\nexport default ForgetPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgetPassword\");","map":{"version":3,"names":["React","Content","Formikform","useFormik","jsxDEV","_jsxDEV","Fragment","_Fragment","ForgetPassword","_s","formik","initialValues","panel_name","validate","values","errors","password","valid_err","PASSWORD_ERROR","isValidPassword","PASSWORD__LENGTH_ERROR","onSubmit","req","fields","name","label","type","label_size","col_size","check_box_true","Create_Strategy","Option_chain","Strategy_plan","children","title","fieldtype","filter","field","showWhen","btn_name","additional_field","fileName","_jsxFileName","lineNumber","columnNumber","style","color","_c","$RefreshReg$"],"sources":["D:/Gaming/gaming/frontend/src/Components/Pages/Auth/ForgotPassword.js"],"sourcesContent":["import React from \"react\";\r\nimport Content from \"../../../Layout/Content/Content\";\r\nimport Formikform from \"../../../Helpers/Form\";\r\n// import * as valid_err from \"../../../Utils/Common_Messages\";\r\nimport { useFormik } from \"formik\";\r\n\r\nconst ForgetPassword = () => {\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      panel_name: \"\",\r\n    },\r\n\r\n    validate: (values) => {\r\n      const errors = {};\r\n\r\n      if (!values.password) {\r\n        errors.password = valid_err.PASSWORD_ERROR;\r\n      } else if (!isValidPassword(values.password)) {\r\n        errors.password = valid_err.PASSWORD__LENGTH_ERROR;\r\n      }\r\n      // if (!values.domain) {\r\n      //   errors.domain = valid_err.DOMAIN_ERROR;\r\n      // }\r\n\r\n      // if (!values.port) {\r\n      //   errors.port = valid_err.PORT_ERROR;\r\n      // }\r\n\r\n      // if (!values.key) {\r\n      //   errors.key = valid_err.KEY_ERROR;\r\n      // }\r\n\r\n      // if (!values.db_url) {\r\n      //   errors.db_url = valid_err.DBURL_ERROR;\r\n      // }\r\n\r\n      // if (!values.db_name) {\r\n      //   errors.db_name = valid_err.DBNAME_ERROR;\r\n      // }\r\n\r\n      // if (!values.backend_rul) {\r\n      //   errors.backend_rul = valid_err.DBNAME_ERROR;\r\n      // }\r\n\r\n      return errors;\r\n    },\r\n    onSubmit: async (values) => {\r\n      const req = {\r\n        // panel_name: values.panel_name,\r\n        // domain: values.domain,\r\n        // port: values.port,\r\n        // key: values.key,\r\n        // ip_address: values.ip_address,\r\n        // theme_id: values.theme_id,\r\n        // db_url: values.db_url,\r\n        // db_name: values.db_name,\r\n        // broker_id: state1,\r\n        // Create_Strategy:\r\n        //   values.Create_Strategy && values.Create_Strategy ? 1 : 0,\r\n        // Option_chain: values.Option_chain && values.Option_chain ? 1 : 0,\r\n        // Strategy_plan: values.Strategy_plan && values.Strategy_plan ? 1 : 0,\r\n        // backend_rul: values.backend_rul,\r\n      };\r\n\r\n      // await dispatch(Add_Panel_data({ req: req, token: user_token }))\r\n      //   .unwrap()\r\n      //   .then((response) => {\r\n      //     if (response.status === 409) {\r\n      //       toast.error(response.data.msg);\r\n      //     } else if (response.status) {\r\n      //       toast.success(response.msg);\r\n\r\n      //       setTimeout(() => {\r\n      //         navigate(\"/super/alladmins\");\r\n      //       }, 1000);\r\n      //     } else if (!response.status) {\r\n      //       toast.error(response.msg);\r\n      //     }\r\n      //   });\r\n    },\r\n  });\r\n\r\n  const fields = [\r\n    {\r\n      name: \"panel_name\",\r\n      label: \"Panel Name\",\r\n      type: \"text\",\r\n      label_size: 12,\r\n      col_size: 6,\r\n    },\r\n    {\r\n      name: \"domain\",\r\n      label: \"Domain\",\r\n      type: \"text\",\r\n      label_size: 12,\r\n      col_size: 6,\r\n    },\r\n    {\r\n      name: \"port\",\r\n      label: \"Port\",\r\n      type: \"text\",\r\n      label_size: 12,\r\n      col_size: 6,\r\n    },\r\n    {\r\n      name: \"key\",\r\n      label: \"key\",\r\n      type: \"text\",\r\n      label_size: 12,\r\n      col_size: 6,\r\n    },\r\n    {\r\n      name: \"ip_address\",\r\n      label: \"Ip Address\",\r\n      type: \"text\",\r\n      label_size: 12,\r\n      col_size: 6,\r\n    },\r\n    {\r\n      name: \"db_url\",\r\n      label: \"Database Url\",\r\n      type: \"text\",\r\n      label_size: 12,\r\n      col_size: 6,\r\n    },\r\n\r\n    {\r\n      name: \"db_name\",\r\n      label: \"Database Name\",\r\n      type: \"text\",\r\n      label_size: 12,\r\n      col_size: 6,\r\n    },\r\n\r\n    {\r\n      name: \"backend_rul\",\r\n      label: \"Backend Url\",\r\n      type: \"text\",\r\n      label_size: 12,\r\n      col_size: 12,\r\n    },\r\n    {\r\n      name: \"Create_Strategy\",\r\n      label: \"Create Strategy\",\r\n      type: \"checkbox\",\r\n      label_size: 12,\r\n      col_size: 3,\r\n      check_box_true: formik.values.Create_Strategy ? true : false,\r\n    },\r\n    {\r\n      name: \"Option_chain\",\r\n      label: \"Option Chain\",\r\n      type: \"checkbox\",\r\n      label_size: 12,\r\n      col_size: 3,\r\n      check_box_true: formik.values.Option_chain ? true : false,\r\n    },\r\n    {\r\n      name: \"Strategy_plan\",\r\n      label: \"Strategy Plan\",\r\n      type: \"checkbox\",\r\n      label_size: 12,\r\n      col_size: 3,\r\n      check_box_true: formik.values.Strategy_plan ? true : false,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Content title=\"Add Users\" col_size={12}>\r\n        <Formikform\r\n          fieldtype={fields.filter((field) => !field.showWhen)}\r\n          formik={formik}\r\n          btn_name=\"Add Panel\"\r\n          additional_field={\r\n            <>\r\n              <h6>All Brokers</h6>\r\n              {/* {getGetAllBrokerName.map((broker) => (\r\n                <div className={`col-lg-2 mt-2`} key={broker.broker_id}>\r\n                  <div className=\"row \">\r\n                    <div className=\"col-lg-12 \">\r\n                      <div class=\"form-check custom-checkbox mb-3\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          className=\"form-check-input\"\r\n                          name={broker.title}\r\n                          value={broker.broker_id}\r\n                          onChange={(e) => handleSBrokerChange(e, broker)}\r\n                        />\r\n                        <label className=\"form-check-label\" for={broker.title}>\r\n                          {broker.title}\r\n                        </label>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))} */}\r\n\r\n              {formik.errors.title && (\r\n                <div style={{ color: \"red\" }}>{formik.errors.title}</div>\r\n              )}\r\n            </>\r\n          }\r\n        />\r\n      </Content>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ForgetPassword;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,iCAAiC;AACrD,OAAOC,UAAU,MAAM,uBAAuB;AAC9C;AACA,SAASC,SAAS,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,MAAM,GAAGP,SAAS,CAAC;IACvBQ,aAAa,EAAE;MACbC,UAAU,EAAE;IACd,CAAC;IAEDC,QAAQ,EAAGC,MAAM,IAAK;MACpB,MAAMC,MAAM,GAAG,CAAC,CAAC;MAEjB,IAAI,CAACD,MAAM,CAACE,QAAQ,EAAE;QACpBD,MAAM,CAACC,QAAQ,GAAGC,SAAS,CAACC,cAAc;MAC5C,CAAC,MAAM,IAAI,CAACC,eAAe,CAACL,MAAM,CAACE,QAAQ,CAAC,EAAE;QAC5CD,MAAM,CAACC,QAAQ,GAAGC,SAAS,CAACG,sBAAsB;MACpD;MACA;MACA;MACA;;MAEA;MACA;MACA;;MAEA;MACA;MACA;;MAEA;MACA;MACA;;MAEA;MACA;MACA;;MAEA;MACA;MACA;;MAEA,OAAOL,MAAM;IACf,CAAC;IACDM,QAAQ,EAAE,MAAOP,MAAM,IAAK;MAC1B,MAAMQ,GAAG,GAAG;QACV;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MAAA,CACD;;MAED;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;IACF;EACF,CAAC,CAAC;EAEF,MAAMC,MAAM,GAAG,CACb;IACEC,IAAI,EAAE,YAAY;IAClBC,KAAK,EAAE,YAAY;IACnBC,IAAI,EAAE,MAAM;IACZC,UAAU,EAAE,EAAE;IACdC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEJ,IAAI,EAAE,QAAQ;IACdC,KAAK,EAAE,QAAQ;IACfC,IAAI,EAAE,MAAM;IACZC,UAAU,EAAE,EAAE;IACdC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEJ,IAAI,EAAE,MAAM;IACZC,KAAK,EAAE,MAAM;IACbC,IAAI,EAAE,MAAM;IACZC,UAAU,EAAE,EAAE;IACdC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEJ,IAAI,EAAE,KAAK;IACXC,KAAK,EAAE,KAAK;IACZC,IAAI,EAAE,MAAM;IACZC,UAAU,EAAE,EAAE;IACdC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEJ,IAAI,EAAE,YAAY;IAClBC,KAAK,EAAE,YAAY;IACnBC,IAAI,EAAE,MAAM;IACZC,UAAU,EAAE,EAAE;IACdC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEJ,IAAI,EAAE,QAAQ;IACdC,KAAK,EAAE,cAAc;IACrBC,IAAI,EAAE,MAAM;IACZC,UAAU,EAAE,EAAE;IACdC,QAAQ,EAAE;EACZ,CAAC,EAED;IACEJ,IAAI,EAAE,SAAS;IACfC,KAAK,EAAE,eAAe;IACtBC,IAAI,EAAE,MAAM;IACZC,UAAU,EAAE,EAAE;IACdC,QAAQ,EAAE;EACZ,CAAC,EAED;IACEJ,IAAI,EAAE,aAAa;IACnBC,KAAK,EAAE,aAAa;IACpBC,IAAI,EAAE,MAAM;IACZC,UAAU,EAAE,EAAE;IACdC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEJ,IAAI,EAAE,iBAAiB;IACvBC,KAAK,EAAE,iBAAiB;IACxBC,IAAI,EAAE,UAAU;IAChBC,UAAU,EAAE,EAAE;IACdC,QAAQ,EAAE,CAAC;IACXC,cAAc,EAAEnB,MAAM,CAACI,MAAM,CAACgB,eAAe,GAAG,IAAI,GAAG;EACzD,CAAC,EACD;IACEN,IAAI,EAAE,cAAc;IACpBC,KAAK,EAAE,cAAc;IACrBC,IAAI,EAAE,UAAU;IAChBC,UAAU,EAAE,EAAE;IACdC,QAAQ,EAAE,CAAC;IACXC,cAAc,EAAEnB,MAAM,CAACI,MAAM,CAACiB,YAAY,GAAG,IAAI,GAAG;EACtD,CAAC,EACD;IACEP,IAAI,EAAE,eAAe;IACrBC,KAAK,EAAE,eAAe;IACtBC,IAAI,EAAE,UAAU;IAChBC,UAAU,EAAE,EAAE;IACdC,QAAQ,EAAE,CAAC;IACXC,cAAc,EAAEnB,MAAM,CAACI,MAAM,CAACkB,aAAa,GAAG,IAAI,GAAG;EACvD,CAAC,CACF;EAED,oBACE3B,OAAA,CAAAE,SAAA;IAAA0B,QAAA,eACE5B,OAAA,CAACJ,OAAO;MAACiC,KAAK,EAAC,WAAW;MAACN,QAAQ,EAAE,EAAG;MAAAK,QAAA,eACtC5B,OAAA,CAACH,UAAU;QACTiC,SAAS,EAAEZ,MAAM,CAACa,MAAM,CAAEC,KAAK,IAAK,CAACA,KAAK,CAACC,QAAQ,CAAE;QACrD5B,MAAM,EAAEA,MAAO;QACf6B,QAAQ,EAAC,WAAW;QACpBC,gBAAgB,eACdnC,OAAA,CAAAE,SAAA;UAAA0B,QAAA,gBACE5B,OAAA;YAAA4B,QAAA,EAAI;UAAW;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EAsBnBlC,MAAM,CAACK,MAAM,CAACmB,KAAK,iBAClB7B,OAAA;YAAKwC,KAAK,EAAE;cAAEC,KAAK,EAAE;YAAM,CAAE;YAAAb,QAAA,EAAEvB,MAAM,CAACK,MAAM,CAACmB;UAAK;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CACzD;QAAA,eACD;MACH;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK;EAAC,gBACV,CAAC;AAEP,CAAC;AAACnC,EAAA,CAzMID,cAAc;EAAA,QACHL,SAAS;AAAA;AAAA4C,EAAA,GADpBvC,cAAc;AA2MpB,eAAeA,cAAc;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}