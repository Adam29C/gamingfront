{"ast":null,"code":"import { createSlice, createReducer, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { ProfileGet } from \"../../../Service/admin.service\";\nimport { LOGIN } from \"../../../Service/auth.service\";\nexport const profileGetApi = createAsyncThunk(\"admin/profileGetApi\", async token => {\n  try {\n    const res = await ProfileGet(token);\n    return await res;\n  } catch (err) {\n    return err;\n  }\n});\nconst AdminSlice = createSlice({\n  name: \"AdminSlice\",\n  initialState: {\n    getProfile: [],\n    loginData: {},\n    isLogin: false\n  },\n  recuders: {},\n  extraReducers: builder => {\n    builder.addCase(profileGetApi.pending, (state, action) => {\n      return {\n        ...state,\n        getProfile: []\n      };\n    }).addCase(profileGetApi.fulfilled, (state, action) => {\n      return {\n        getProfile: action.payload\n      };\n    }).addCase(profileGetApi.rejected, (state, action) => {\n      return {\n        ...state,\n        getProfile: []\n      };\n    });\n  }\n});\nexport default AdminSlice;","map":{"version":3,"names":["createSlice","createReducer","createAsyncThunk","ProfileGet","LOGIN","profileGetApi","token","res","err","AdminSlice","name","initialState","getProfile","loginData","isLogin","recuders","extraReducers","builder","addCase","pending","state","action","fulfilled","payload","rejected"],"sources":["D:/Gaming/gaming/frontend/src/Components/Redux/Slice/Admin/admin.slice.js"],"sourcesContent":["import { createSlice, createReducer, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { ProfileGet } from \"../../../Service/admin.service\";\r\nimport { LOGIN } from \"../../../Service/auth.service\";\r\n\r\nexport const profileGetApi = createAsyncThunk(\r\n  \"admin/profileGetApi\",\r\n  async (token) => {\r\n    try {\r\n      const res = await ProfileGet(token);\r\n      return await res;\r\n    } catch (err) {\r\n      return err;\r\n    }\r\n  }\r\n);\r\n\r\nconst AdminSlice = createSlice({\r\n  name: \"AdminSlice\",\r\n  initialState: {\r\n    getProfile: [],\r\n    loginData: {},\r\n    isLogin: false,\r\n  },\r\n\r\n  recuders: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(profileGetApi.pending, (state, action) => {\r\n        return { ...state, getProfile: [] };\r\n      })\r\n      .addCase(profileGetApi.fulfilled, (state, action) => {\r\n        return { getProfile: action.payload };\r\n      })\r\n      .addCase(profileGetApi.rejected, (state, action) => {\r\n        return { ...state, getProfile: [] };\r\n      });\r\n  },\r\n});\r\n\r\nexport default AdminSlice;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,aAAa,EAAEC,gBAAgB,QAAQ,kBAAkB;AAC/E,SAASC,UAAU,QAAQ,gCAAgC;AAC3D,SAASC,KAAK,QAAQ,+BAA+B;AAErD,OAAO,MAAMC,aAAa,GAAGH,gBAAgB,CAC3C,qBAAqB,EACrB,MAAOI,KAAK,IAAK;EACf,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMJ,UAAU,CAACG,KAAK,CAAC;IACnC,OAAO,MAAMC,GAAG;EAClB,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZ,OAAOA,GAAG;EACZ;AACF,CACF,CAAC;AAED,MAAMC,UAAU,GAAGT,WAAW,CAAC;EAC7BU,IAAI,EAAE,YAAY;EAClBC,YAAY,EAAE;IACZC,UAAU,EAAE,EAAE;IACdC,SAAS,EAAE,CAAC,CAAC;IACbC,OAAO,EAAE;EACX,CAAC;EAEDC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACb,aAAa,CAACc,OAAO,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACjD,OAAO;QAAE,GAAGD,KAAK;QAAER,UAAU,EAAE;MAAG,CAAC;IACrC,CAAC,CAAC,CACDM,OAAO,CAACb,aAAa,CAACiB,SAAS,EAAE,CAACF,KAAK,EAAEC,MAAM,KAAK;MACnD,OAAO;QAAET,UAAU,EAAES,MAAM,CAACE;MAAQ,CAAC;IACvC,CAAC,CAAC,CACDL,OAAO,CAACb,aAAa,CAACmB,QAAQ,EAAE,CAACJ,KAAK,EAAEC,MAAM,KAAK;MAClD,OAAO;QAAE,GAAGD,KAAK;QAAER,UAAU,EAAE;MAAG,CAAC;IACrC,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAeH,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}