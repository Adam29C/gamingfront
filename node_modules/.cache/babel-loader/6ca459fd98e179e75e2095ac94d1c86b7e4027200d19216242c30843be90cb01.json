{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n// import { DispatchLogin } from \"../../../Layout/Auth/Login\";\nimport { LOGIN } from \"../../../Service/auth.service\";\nexport const Login = createAsyncThunk(\"auth/login\", async data => {\n  const {\n    user_id,\n    token\n  } = data;\n  try {\n    const res = await LOGIN({\n      _id: user_id\n    }, token);\n    return await res;\n  } catch (err) {\n    return err;\n  }\n});\nconst AuthSlice = createSlice({\n  name: \"AuthSlice\",\n  initialState: {\n    isLoading: false,\n    isError: false,\n    helps: [],\n    status: false\n  },\n  recuders: {},\n  extraReducers: {\n    [Login.pending]: (state, {\n      payload\n    }) => {\n      // state.isLoading = false;\n      // return { ...state, get_dashboard: [], isLoading: true };\n    },\n    [Login.fulfilled]: (state, {\n      payload\n    }) => {\n      // state.isLoading = false;\n      return {\n        ...state,\n        helps: payload,\n        isLoading: false\n      };\n    },\n    [Login.rejected]: (state, action) => {\n      // return { ...state, get_dashboard: action, isLoading: false };\n    }\n  }\n});\nexport default AuthSlice;","map":{"version":3,"names":["createSlice","createAsyncThunk","LOGIN","Login","data","user_id","token","res","_id","err","AuthSlice","name","initialState","isLoading","isError","helps","status","recuders","extraReducers","pending","state","payload","fulfilled","rejected","action"],"sources":["D:/Gaming/gaming/frontend/src/Components/Redux/Slice/Auth/auth.slice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n// import { DispatchLogin } from \"../../../Layout/Auth/Login\";\r\nimport { LOGIN } from \"../../../Service/auth.service\";\r\n\r\nexport const Login = createAsyncThunk(\"auth/login\", async (data) => {\r\n  const { user_id, token } = data;\r\n\r\n  try {\r\n    const res = await LOGIN({ _id: user_id }, token);\r\n    return await res;\r\n  } catch (err) {\r\n    return err;\r\n  }\r\n});\r\n\r\nconst AuthSlice = createSlice({\r\n  name: \"AuthSlice\",\r\n  initialState: {\r\n    isLoading: false,\r\n    isError: false,\r\n    helps: [],\r\n    status: false,\r\n  },\r\n\r\n  recuders: {},\r\n    extraReducers: {\r\n      [Login.pending]: (state, { payload }) => {\r\n        // state.isLoading = false;\r\n        // return { ...state, get_dashboard: [], isLoading: true };\r\n      },\r\n      [Login.fulfilled]: (state, { payload }) => {\r\n        // state.isLoading = false;\r\n        return { ...state, helps: payload, isLoading: false };\r\n      },\r\n      [Login.rejected]: (state, action) => {\r\n        // return { ...state, get_dashboard: action, isLoading: false };\r\n      },\r\n    },\r\n});\r\n\r\nexport default AuthSlice;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE;AACA,SAASC,KAAK,QAAQ,+BAA+B;AAErD,OAAO,MAAMC,KAAK,GAAGF,gBAAgB,CAAC,YAAY,EAAE,MAAOG,IAAI,IAAK;EAClE,MAAM;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGF,IAAI;EAE/B,IAAI;IACF,MAAMG,GAAG,GAAG,MAAML,KAAK,CAAC;MAAEM,GAAG,EAAEH;IAAQ,CAAC,EAAEC,KAAK,CAAC;IAChD,OAAO,MAAMC,GAAG;EAClB,CAAC,CAAC,OAAOE,GAAG,EAAE;IACZ,OAAOA,GAAG;EACZ;AACF,CAAC,CAAC;AAEF,MAAMC,SAAS,GAAGV,WAAW,CAAC;EAC5BW,IAAI,EAAE,WAAW;EACjBC,YAAY,EAAE;IACZC,SAAS,EAAE,KAAK;IAChBC,OAAO,EAAE,KAAK;IACdC,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE;EACV,CAAC;EAEDC,QAAQ,EAAE,CAAC,CAAC;EACVC,aAAa,EAAE;IACb,CAACf,KAAK,CAACgB,OAAO,GAAG,CAACC,KAAK,EAAE;MAAEC;IAAQ,CAAC,KAAK;MACvC;MACA;IAAA,CACD;IACD,CAAClB,KAAK,CAACmB,SAAS,GAAG,CAACF,KAAK,EAAE;MAAEC;IAAQ,CAAC,KAAK;MACzC;MACA,OAAO;QAAE,GAAGD,KAAK;QAAEL,KAAK,EAAEM,OAAO;QAAER,SAAS,EAAE;MAAM,CAAC;IACvD,CAAC;IACD,CAACV,KAAK,CAACoB,QAAQ,GAAG,CAACH,KAAK,EAAEI,MAAM,KAAK;MACnC;IAAA;EAEJ;AACJ,CAAC,CAAC;AAEF,eAAed,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}