{"ast":null,"code":"var _jsxFileName = \"D:\\\\Gaming\\\\gaming\\\\frontend\\\\src\\\\Components\\\\Routes\\\\Routing.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { Route, Routes, useLocation, useNavigate } from \"react-router-dom\";\n// import Admin from \"./Admin\";\nimport SuperAdmin from \"./Superadmin\";\nimport Admin from \"./Admin\";\nimport Users from \"./User\";\nimport Wraper from \"../Pages/Users/Wraper/Wraper\";\nimport Login from \"../Pages/Auth/Auth\";\nimport SignUpUser from \"../Pages/Auth/SignUpUser\";\nimport Otp from \"../Pages/Auth/OtpProcess\";\nimport ForgotPassword from \"../Pages/Auth/ForgotPassword\";\nimport ProtectedRoutes from \"./ProtectedRoute\";\nimport PublicRoutes from \"./PublicRoutes\";\nimport { jwtDecode } from \"jwt-decode\";\n\n// // import NotFound from \"../Layout/NotFound\"\n\n// const Routing = () => {\n//   const location = useLocation();\n\n//   const navigate = useNavigate();\n//   const roles = JSON.parse(localStorage.getItem(\"roles\"));\n//   const accessToken = localStorage.getItem(\"token\");\n\n//   return (\n//     <>\n//       <Routes>\n//         <Route\n//           path=\"/super/*\"\n//           element={roles === 0 ? <SuperAdmin /> : <Wraper />}\n//         />\n//         {/* <Route path=\"/admin/*\" element={roles === 1  ? <Admin /> : <Wraper/>} /> */}\n//         <Route path=\"/*\" element={roles === 2 ? <Users /> : <Wraper />} />\n//         <Route path=\"/login\" element={<Login />} />\n//         <Route path=\"/signup\" element={<SignUpUser />} />\n//         <Route path=\"/verifyotp\" element={<Otp />} />\n//         <Route path=\"/forgetpassword\" element={<ForgotPassword />} />\n//       </Routes>\n//     </>\n//   );\n// };\n\n// export default Routing;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Routing = () => {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const roles = JSON.parse(localStorage.getItem(\"roles\"));\n  const isAuthenticated = !!localStorage.getItem(\"token\");\n  useEffect(() => {\n    if (isAuthenticated != null && isAuthenticated != \"null\" && isAuthenticated != undefined) {\n      const decoded = jwtDecode(isAuthenticated && isAuthenticated);\n      const expiryTimestamp = decoded.exp * 1000;\n      if (expiryTimestamp < Date.now()) {\n        navigate(\"/home\");\n      }\n    }\n  }, []);\n  return isAuthenticated ? /*#__PURE__*/_jsxDEV(ProtectedRoutes, {\n    roles: roles\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(PublicRoutes, {\n    route: \"home\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(Routing, \"fPjCxODVr6jVvib6o2c9VLE4s84=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Routing;\nexport default Routing;\nvar _c;\n$RefreshReg$(_c, \"Routing\");","map":{"version":3,"names":["React","useEffect","Route","Routes","useLocation","useNavigate","SuperAdmin","Admin","Users","Wraper","Login","SignUpUser","Otp","ForgotPassword","ProtectedRoutes","PublicRoutes","jwtDecode","jsxDEV","_jsxDEV","Routing","_s","location","navigate","roles","JSON","parse","localStorage","getItem","isAuthenticated","undefined","decoded","expiryTimestamp","exp","Date","now","fileName","_jsxFileName","lineNumber","columnNumber","route","_c","$RefreshReg$"],"sources":["D:/Gaming/gaming/frontend/src/Components/Routes/Routing.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Route, Routes, useLocation, useNavigate } from \"react-router-dom\";\r\n// import Admin from \"./Admin\";\r\nimport SuperAdmin from \"./Superadmin\";\r\nimport Admin from \"./Admin\";\r\nimport Users from \"./User\";\r\nimport Wraper from \"../Pages/Users/Wraper/Wraper\";\r\n\r\nimport Login from \"../Pages/Auth/Auth\";\r\nimport SignUpUser from \"../Pages/Auth/SignUpUser\";\r\nimport Otp from \"../Pages/Auth/OtpProcess\";\r\nimport ForgotPassword from \"../Pages/Auth/ForgotPassword\";\r\n\r\nimport ProtectedRoutes from \"./ProtectedRoute\";\r\nimport PublicRoutes from \"./PublicRoutes\";\r\nimport { jwtDecode } from \"jwt-decode\";\r\n\r\n// // import NotFound from \"../Layout/NotFound\"\r\n\r\n// const Routing = () => {\r\n//   const location = useLocation();\r\n\r\n//   const navigate = useNavigate();\r\n//   const roles = JSON.parse(localStorage.getItem(\"roles\"));\r\n//   const accessToken = localStorage.getItem(\"token\");\r\n\r\n//   return (\r\n//     <>\r\n//       <Routes>\r\n//         <Route\r\n//           path=\"/super/*\"\r\n//           element={roles === 0 ? <SuperAdmin /> : <Wraper />}\r\n//         />\r\n//         {/* <Route path=\"/admin/*\" element={roles === 1  ? <Admin /> : <Wraper/>} /> */}\r\n//         <Route path=\"/*\" element={roles === 2 ? <Users /> : <Wraper />} />\r\n//         <Route path=\"/login\" element={<Login />} />\r\n//         <Route path=\"/signup\" element={<SignUpUser />} />\r\n//         <Route path=\"/verifyotp\" element={<Otp />} />\r\n//         <Route path=\"/forgetpassword\" element={<ForgotPassword />} />\r\n//       </Routes>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default Routing;\r\n\r\nconst Routing = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const roles = JSON.parse(localStorage.getItem(\"roles\"));\r\n\r\n  const isAuthenticated = !!localStorage.getItem(\"token\");\r\n\r\n  useEffect(() => {\r\n    if (\r\n      isAuthenticated != null &&\r\n      isAuthenticated != \"null\" &&\r\n      isAuthenticated != undefined\r\n    ) {\r\n      const decoded = jwtDecode(isAuthenticated && isAuthenticated);\r\n      const expiryTimestamp = decoded.exp * 1000;\r\n\r\n      if (expiryTimestamp < Date.now()) {\r\n        navigate(\"/home\");\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  return isAuthenticated ? (\r\n    <ProtectedRoutes roles={roles} />\r\n  ) : (\r\n    <PublicRoutes route=\"home\" />\r\n  );\r\n};\r\n\r\nexport default Routing;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,KAAK,EAAEC,MAAM,EAAEC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC1E;AACA,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,KAAK,MAAM,QAAQ;AAC1B,OAAOC,MAAM,MAAM,8BAA8B;AAEjD,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,GAAG,MAAM,0BAA0B;AAC1C,OAAOC,cAAc,MAAM,8BAA8B;AAEzD,OAAOC,eAAe,MAAM,kBAAkB;AAC9C,OAAOC,YAAY,MAAM,gBAAgB;AACzC,SAASC,SAAS,QAAQ,YAAY;;AAEtC;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,QAAQ,GAAGjB,WAAW,CAAC,CAAC;EAC9B,MAAMkB,QAAQ,GAAGjB,WAAW,CAAC,CAAC;EAC9B,MAAMkB,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;EAEvD,MAAMC,eAAe,GAAG,CAAC,CAACF,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAEvD1B,SAAS,CAAC,MAAM;IACd,IACE2B,eAAe,IAAI,IAAI,IACvBA,eAAe,IAAI,MAAM,IACzBA,eAAe,IAAIC,SAAS,EAC5B;MACA,MAAMC,OAAO,GAAGd,SAAS,CAACY,eAAe,IAAIA,eAAe,CAAC;MAC7D,MAAMG,eAAe,GAAGD,OAAO,CAACE,GAAG,GAAG,IAAI;MAE1C,IAAID,eAAe,GAAGE,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE;QAChCZ,QAAQ,CAAC,OAAO,CAAC;MACnB;IACF;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOM,eAAe,gBACpBV,OAAA,CAACJ,eAAe;IAACS,KAAK,EAAEA;EAAM;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,gBAEjCpB,OAAA,CAACH,YAAY;IAACwB,KAAK,EAAC;EAAM;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAC7B;AACH,CAAC;AAAClB,EAAA,CA3BID,OAAO;EAAA,QACMf,WAAW,EACXC,WAAW;AAAA;AAAAmC,EAAA,GAFxBrB,OAAO;AA6Bb,eAAeA,OAAO;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}