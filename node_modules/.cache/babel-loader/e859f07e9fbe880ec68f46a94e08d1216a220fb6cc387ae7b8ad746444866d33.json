{"ast":null,"code":"export const Email_regex=email=>{const emailRegex=/^[a-zA-Z0-9._%+-]+@(gmail|yahoo|ymail|rediffmail|hotmail|outlook|aol|icloud|protonmail|example)\\.(com|co\\.in|in|net|org|edu|gov|uk|us|info|biz|io|...)[a-zA-Z]{0,}$/;return emailRegex.test(email);};export const Name_regex=name=>{const emailRegex=/^[a-zA-Z ]+$/;return emailRegex.test(name);};export const Stg_regex=name=>{const StgRegex=/^[a-zA-Z ]+$/;return StgRegex.test(name);};export const Mobile_regex=mobile=>{const MobileRegex=/^[0-9]{10}$/;return MobileRegex.test(mobile);};export const Password_Rejex=mobile=>{const password=/^.{8,15}$/;return password.test(mobile);};export const No_Negetive_Input_regex=mobile=>{const value=/^(?!0*(\\.0*)?$)\\d+(\\.\\d+)?$/;return value.test(mobile);};export const ValidYoutubeUrl=url=>{// Regular expression to match a YouTube URL\nconst youtubeRegex=/^(https?:\\/\\/)?(www\\.)?(youtube\\.com\\/(watch\\?v=|embed\\/|v\\/)|youtu\\.be\\/)[\\w-]+(&[\\w%=]*)?$/;return youtubeRegex.test(url);};","map":{"version":3,"names":["Email_regex","email","emailRegex","test","Name_regex","name","Stg_regex","StgRegex","Mobile_regex","mobile","MobileRegex","Password_Rejex","password","No_Negetive_Input_regex","value","ValidYoutubeUrl","url","youtubeRegex"],"sources":["D:/Gaming/gaming/frontend/src/Components/Utils/Valid_Rejex.js"],"sourcesContent":["export const Email_regex = (email) => {\r\n  const emailRegex =\r\n    /^[a-zA-Z0-9._%+-]+@(gmail|yahoo|ymail|rediffmail|hotmail|outlook|aol|icloud|protonmail|example)\\.(com|co\\.in|in|net|org|edu|gov|uk|us|info|biz|io|...)[a-zA-Z]{0,}$/;\r\n  return emailRegex.test(email);\r\n};\r\n\r\nexport const Name_regex = (name) => {\r\n  const emailRegex = /^[a-zA-Z ]+$/;\r\n  return emailRegex.test(name);\r\n};\r\n\r\nexport const Stg_regex = (name) => {\r\n  const StgRegex = /^[a-zA-Z ]+$/;\r\n  return StgRegex.test(name);\r\n};\r\n\r\nexport const Mobile_regex = (mobile) => {\r\n  const MobileRegex = /^[0-9]{10}$/;\r\n  return MobileRegex.test(mobile);\r\n};\r\nexport const Password_Rejex = (mobile) => {\r\n  const password = /^.{8,15}$/;\r\n  return password.test(mobile);\r\n};\r\n\r\nexport const No_Negetive_Input_regex = (mobile) => {\r\n  const value = /^(?!0*(\\.0*)?$)\\d+(\\.\\d+)?$/;\r\n  return value.test(mobile);\r\n};\r\n\r\nexport const ValidYoutubeUrl = (url) => {\r\n  // Regular expression to match a YouTube URL\r\n  const youtubeRegex =\r\n    /^(https?:\\/\\/)?(www\\.)?(youtube\\.com\\/(watch\\?v=|embed\\/|v\\/)|youtu\\.be\\/)[\\w-]+(&[\\w%=]*)?$/;\r\n\r\n  return youtubeRegex.test(url);\r\n};\r\n"],"mappings":"AAAA,MAAO,MAAM,CAAAA,WAAW,CAAIC,KAAK,EAAK,CACpC,KAAM,CAAAC,UAAU,CACd,qKAAqK,CACvK,MAAO,CAAAA,UAAU,CAACC,IAAI,CAACF,KAAK,CAAC,CAC/B,CAAC,CAED,MAAO,MAAM,CAAAG,UAAU,CAAIC,IAAI,EAAK,CAClC,KAAM,CAAAH,UAAU,CAAG,cAAc,CACjC,MAAO,CAAAA,UAAU,CAACC,IAAI,CAACE,IAAI,CAAC,CAC9B,CAAC,CAED,MAAO,MAAM,CAAAC,SAAS,CAAID,IAAI,EAAK,CACjC,KAAM,CAAAE,QAAQ,CAAG,cAAc,CAC/B,MAAO,CAAAA,QAAQ,CAACJ,IAAI,CAACE,IAAI,CAAC,CAC5B,CAAC,CAED,MAAO,MAAM,CAAAG,YAAY,CAAIC,MAAM,EAAK,CACtC,KAAM,CAAAC,WAAW,CAAG,aAAa,CACjC,MAAO,CAAAA,WAAW,CAACP,IAAI,CAACM,MAAM,CAAC,CACjC,CAAC,CACD,MAAO,MAAM,CAAAE,cAAc,CAAIF,MAAM,EAAK,CACxC,KAAM,CAAAG,QAAQ,CAAG,WAAW,CAC5B,MAAO,CAAAA,QAAQ,CAACT,IAAI,CAACM,MAAM,CAAC,CAC9B,CAAC,CAED,MAAO,MAAM,CAAAI,uBAAuB,CAAIJ,MAAM,EAAK,CACjD,KAAM,CAAAK,KAAK,CAAG,6BAA6B,CAC3C,MAAO,CAAAA,KAAK,CAACX,IAAI,CAACM,MAAM,CAAC,CAC3B,CAAC,CAED,MAAO,MAAM,CAAAM,eAAe,CAAIC,GAAG,EAAK,CACtC;AACA,KAAM,CAAAC,YAAY,CAChB,8FAA8F,CAEhG,MAAO,CAAAA,YAAY,CAACd,IAAI,CAACa,GAAG,CAAC,CAC/B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}