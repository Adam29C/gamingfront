{"ast":null,"code":"import React from\"react\";import Formikform from\"../../../../../Helpers/Form\";import*as valid_err from\"../../../../../Utils/Common_Msg\";import{useFormik}from\"formik\";import ToastButton from\"../../../../../Helpers/Toast\";import{ChangePasswordApi}from\"../../../../../Service/admin.service\";import toast from\"react-hot-toast\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const UserChangePassword=()=>{const token=localStorage.getItem(\"token\");const user_details=JSON.parse(localStorage.getItem(\"user_details\"));const formik=useFormik({initialValues:{old_password:\"\",new_password:\"\",confirm_password:\"\"},validate:values=>{const errors={};if(!values.old_password){errors.old_password=valid_err.OLD_PASSWORD_ERROR;}if(!values.new_password){errors.new_password=valid_err.NEW_PASSWORD_ERROR;}if(!values.confirm_password){errors.confirm_password=valid_err.CONFIRM_PASSWORD_ERROR;}else if(values.confirm_password!==values.new_password){errors.confirm_password=valid_err.CONFIRM_AND_NEW_PASSWORD_ERROR;}return errors;},onSubmit:async(values,_ref)=>{let{resetForm}=_ref;try{const data={user_id:user_details===null||user_details===void 0?void 0:user_details.id,old_password:values.old_password,new_password:values.new_password};const response=await ChangePasswordApi(data,token);if((response===null||response===void 0?void 0:response.status)==200){var _response$data;toast.success(response===null||response===void 0?void 0:(_response$data=response.data)===null||_response$data===void 0?void 0:_response$data.msg);resetForm();}else if(response.response.data.statusCode===400){toast.error(response.response.data.msg);}}catch(error){toast.error(error.message);}}});const fields=[{name:\"old_password\",label:\"Old Password\",type:\"password\",label_size:12,col_size:12},{name:\"new_password\",label:\"New Password\",type:\"password\",label_size:12,col_size:12},{name:\"confirm_password\",label:\"Confirm Password\",type:\"password\",label_size:12,col_size:12}];return/*#__PURE__*/_jsxs(\"app-change-password\",{\"_ngcontent-aja-c61\":\"\",\"_nghost-aja-c53\":\"\",children:[/*#__PURE__*/_jsx(Formikform,{fieldtype:fields.filter(field=>!field.showWhen),formik:formik,btn_name:\"Update\"}),/*#__PURE__*/_jsx(ToastButton,{})]});};export default UserChangePassword;","map":{"version":3,"names":["React","Formikform","valid_err","useFormik","ToastButton","ChangePasswordApi","toast","jsx","_jsx","jsxs","_jsxs","UserChangePassword","token","localStorage","getItem","user_details","JSON","parse","formik","initialValues","old_password","new_password","confirm_password","validate","values","errors","OLD_PASSWORD_ERROR","NEW_PASSWORD_ERROR","CONFIRM_PASSWORD_ERROR","CONFIRM_AND_NEW_PASSWORD_ERROR","onSubmit","_ref","resetForm","data","user_id","id","response","status","_response$data","success","msg","statusCode","error","message","fields","name","label","type","label_size","col_size","children","fieldtype","filter","field","showWhen","btn_name"],"sources":["D:/Gaming/gaming/frontend/src/Components/Pages/Users/Layout/Pages/userprofile/UserChangePassword.js"],"sourcesContent":["import React from \"react\";\r\nimport Formikform from \"../../../../../Helpers/Form\";\r\nimport * as valid_err from \"../../../../../Utils/Common_Msg\";\r\nimport { useFormik } from \"formik\";\r\nimport ToastButton from \"../../../../../Helpers/Toast\";\r\nimport { ChangePasswordApi } from \"../../../../../Service/admin.service\";\r\nimport toast from \"react-hot-toast\";\r\n\r\nconst UserChangePassword = () => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const user_details = JSON.parse(localStorage.getItem(\"user_details\"))\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      old_password: \"\",\r\n      new_password: \"\",\r\n      confirm_password: \"\",\r\n    },\r\n\r\n    validate: (values) => {\r\n      const errors = {};\r\n\r\n      if (!values.old_password) {\r\n        errors.old_password = valid_err.OLD_PASSWORD_ERROR;\r\n      }\r\n\r\n      if (!values.new_password) {\r\n        errors.new_password = valid_err.NEW_PASSWORD_ERROR;\r\n      }\r\n\r\n      if (!values.confirm_password) {\r\n        errors.confirm_password = valid_err.CONFIRM_PASSWORD_ERROR;\r\n      } else if (values.confirm_password !== values.new_password) {\r\n        errors.confirm_password = valid_err.CONFIRM_AND_NEW_PASSWORD_ERROR;\r\n      }\r\n\r\n      return errors;\r\n    },\r\n    onSubmit: async (values, { resetForm }) => {\r\n      try {\r\n        const data = {\r\n          user_id: user_details?.id,\r\n          old_password: values.old_password,\r\n          new_password: values.new_password,\r\n        };\r\n\r\n        const response = await ChangePasswordApi(data, token);\r\n  \r\n\r\n        if (response?.status == 200) {\r\n          toast.success(response?.data?.msg);\r\n          resetForm()\r\n        }\r\n        else if(response.response.data.statusCode === 400){\r\n          toast.error(response.response.data.msg);\r\n        }\r\n      } catch (error) {\r\n        toast.error(error.message);\r\n\r\n      }\r\n    },\r\n  });\r\n\r\n  const fields = [\r\n    {\r\n      name: \"old_password\",\r\n      label: \"Old Password\",\r\n      type: \"password\",\r\n      label_size: 12,\r\n      col_size: 12,\r\n    },\r\n    {\r\n      name: \"new_password\",\r\n      label: \"New Password\",\r\n      type: \"password\",\r\n      label_size: 12,\r\n      col_size: 12,\r\n    },\r\n    {\r\n      name: \"confirm_password\",\r\n      label: \"Confirm Password\",\r\n      type: \"password\",\r\n      label_size: 12,\r\n      col_size: 12,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <app-change-password\r\n      _ngcontent-aja-c61=\"\"\r\n      _nghost-aja-c53=\"\"\r\n    >\r\n  \r\n      <Formikform\r\n        fieldtype={fields.filter((field) => !field.showWhen)}\r\n        formik={formik}\r\n        btn_name=\"Update\"\r\n      />\r\n      <ToastButton />\r\n    </app-change-password>\r\n  )\r\n}\r\n\r\nexport default UserChangePassword"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}