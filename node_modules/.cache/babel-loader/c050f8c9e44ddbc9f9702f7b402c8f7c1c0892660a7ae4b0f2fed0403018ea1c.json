{"ast":null,"code":"import{createSlice,createReducer,createAsyncThunk}from\"@reduxjs/toolkit\";import{ProfileGet}from\"../../../Service/admin.service\";import{LOGIN}from\"../../../Service/auth.service\";export const profileGetApi=createAsyncThunk(\"admin/profileGetApi\",async token=>{try{const res=await ProfileGet(token);return await res;}catch(err){return err;}});const AdminSlice=createSlice({name:\"AdminSlice\",initialState:{getProfile:[],loginData:{},isLogin:false},recuders:{},extraReducers:builder=>{builder.addCase(profileGetApi.pending,(state,action)=>{return{...state,getProfile:[]};}).addCase(profileGetApi.fulfilled,(state,action)=>{return{getProfile:action.payload};}).addCase(profileGetApi.rejected,(state,action)=>{return{...state,getProfile:[]};});}});export default AdminSlice;","map":{"version":3,"names":["createSlice","createReducer","createAsyncThunk","ProfileGet","LOGIN","profileGetApi","token","res","err","AdminSlice","name","initialState","getProfile","loginData","isLogin","recuders","extraReducers","builder","addCase","pending","state","action","fulfilled","payload","rejected"],"sources":["D:/Gaming/gaming/frontend/src/Components/Redux/Slice/Admin/admin.slice.js"],"sourcesContent":["import { createSlice, createReducer, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { ProfileGet } from \"../../../Service/admin.service\";\r\nimport { LOGIN } from \"../../../Service/auth.service\";\r\n\r\nexport const profileGetApi = createAsyncThunk(\r\n  \"admin/profileGetApi\",\r\n  async (token) => {\r\n    try {\r\n      const res = await ProfileGet(token);\r\n      return await res;\r\n    } catch (err) {\r\n      return err;\r\n    }\r\n  }\r\n);\r\n\r\nconst AdminSlice = createSlice({\r\n  name: \"AdminSlice\",\r\n  initialState: {\r\n    getProfile: [],\r\n    loginData: {},\r\n    isLogin: false,\r\n  },\r\n\r\n  recuders: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(profileGetApi.pending, (state, action) => {\r\n        return { ...state, getProfile: [] };\r\n      })\r\n      .addCase(profileGetApi.fulfilled, (state, action) => {\r\n        return { getProfile: action.payload };\r\n      })\r\n      .addCase(profileGetApi.rejected, (state, action) => {\r\n        return { ...state, getProfile: [] };\r\n      });\r\n  },\r\n});\r\n\r\nexport default AdminSlice;\r\n"],"mappings":"AAAA,OAASA,WAAW,CAAEC,aAAa,CAAEC,gBAAgB,KAAQ,kBAAkB,CAC/E,OAASC,UAAU,KAAQ,gCAAgC,CAC3D,OAASC,KAAK,KAAQ,+BAA+B,CAErD,MAAO,MAAM,CAAAC,aAAa,CAAGH,gBAAgB,CAC3C,qBAAqB,CACrB,KAAO,CAAAI,KAAK,EAAK,CACf,GAAI,CACF,KAAM,CAAAC,GAAG,CAAG,KAAM,CAAAJ,UAAU,CAACG,KAAK,CAAC,CACnC,MAAO,MAAM,CAAAC,GAAG,CAClB,CAAE,MAAOC,GAAG,CAAE,CACZ,MAAO,CAAAA,GAAG,CACZ,CACF,CACF,CAAC,CAED,KAAM,CAAAC,UAAU,CAAGT,WAAW,CAAC,CAC7BU,IAAI,CAAE,YAAY,CAClBC,YAAY,CAAE,CACZC,UAAU,CAAE,EAAE,CACdC,SAAS,CAAE,CAAC,CAAC,CACbC,OAAO,CAAE,KACX,CAAC,CAEDC,QAAQ,CAAE,CAAC,CAAC,CACZC,aAAa,CAAGC,OAAO,EAAK,CAC1BA,OAAO,CACJC,OAAO,CAACb,aAAa,CAACc,OAAO,CAAE,CAACC,KAAK,CAAEC,MAAM,GAAK,CACjD,MAAO,CAAE,GAAGD,KAAK,CAAER,UAAU,CAAE,EAAG,CAAC,CACrC,CAAC,CAAC,CACDM,OAAO,CAACb,aAAa,CAACiB,SAAS,CAAE,CAACF,KAAK,CAAEC,MAAM,GAAK,CACnD,MAAO,CAAET,UAAU,CAAES,MAAM,CAACE,OAAQ,CAAC,CACvC,CAAC,CAAC,CACDL,OAAO,CAACb,aAAa,CAACmB,QAAQ,CAAE,CAACJ,KAAK,CAAEC,MAAM,GAAK,CAClD,MAAO,CAAE,GAAGD,KAAK,CAAER,UAAU,CAAE,EAAG,CAAC,CACrC,CAAC,CAAC,CACN,CACF,CAAC,CAAC,CAEF,cAAe,CAAAH,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}