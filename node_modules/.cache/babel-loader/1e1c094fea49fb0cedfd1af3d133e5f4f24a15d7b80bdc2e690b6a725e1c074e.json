{"ast":null,"code":"var _jsxFileName = \"D:\\\\Gaming\\\\gaming\\\\frontend\\\\src\\\\Components\\\\Pages\\\\Auth\\\\SignUpUser.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import Content from \"../../Layout/Content/Content1\";\n// import Formikform from \"../../Helpers/Form\";\n// import { useFormik } from \"formik\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import toast from \"react-hot-toast\";\n// import { Link, useNavigate } from \"react-router-dom\";\n// import {\n//   Send_OTP,\n//   Sign_Up,\n//   Verify_OTP,\n// } from \"../../Redux/Slice/Auth/auth.slice\";\n// import { Name_regex, Mobile_regex } from \"../../Utils/Valid_Rejex\";\n// import ToastButton from \"../../Helpers/Toast\";\n// import OTPInput, { ResendOTP } from \"otp-input-react\";\n// import * as valid_err from \"../../Utils/Common_Msg\";\n\n// const Users = () => {\n//   const dispatch = useDispatch();\n//   const navigate = useNavigate();\n\n//   const [OTP, setOTP] = useState(\"\");\n//   const [ShowOTP, setShowOTP] = useState(false);\n//   const [Disabled, setDisabled] = useState(false);\n\n//   const isValidContact = (mobile) => {\n//     return Mobile_regex(mobile);\n//   };\n\n//   const isValidName = (name) => {\n//     return Name_regex(name);\n//   };\n\n//   const formik = useFormik({\n//     initialValues: {\n//       name: \"\",\n//       mobileNumber: \"\",\n//       password: \"\",\n//     },\n\n//     validate: (values) => {\n//       const errors = {};\n\n//       if (!isValidName(values.name)) {\n//         errors.name = valid_err.INVALID_ERROR;\n//       }\n//       if (!values.mobileNumber) {\n//         errors.mobileNumber = valid_err.CONTACT_ERROR;\n//       } else if (!isValidContact(values.mobileNumber)) {\n//         errors.mobileNumber = valid_err.INVALID_CONTACT_ERROR;\n//       }\n\n//       if (!values.password) {\n//         errors.password = valid_err.PASSWORD_ERROR;\n//       }\n\n//       return errors;\n//     },\n//     onSubmit: async (values) => {\n//       const req = {\n//         name: values.name,\n//         mobileNumber: values.mobileNumber,\n//         password: values.password,\n//       };\n\n//       await dispatch(Sign_Up(req))\n//         .unwrap()\n//         .then((response) => {\n//           if (response.status === 400) {\n//             toast.error(response.data.msg);\n//           } else if (response.status) {\n//             toast.success(response.msg);\n//             setTimeout(() => {\n//               navigate(\"/\");\n//             }, 1000);\n//           } else if (!response.status) {\n//             toast.error(response.msg);\n//           }\n//         });\n//     },\n//   });\n\n//   const fields = [\n//     {\n//       name: \"name\",\n//       label: \"Name\",\n//       type: \"text\",\n//       label_size: 12,\n//       col_size: 12,\n//       showButton: false,\n//     },\n\n//     {\n//       name: \"password\",\n//       label: \"Password\",\n//       type: \"password\",\n//       label_size: 12,\n//       col_size: 12,\n//       showButton: false,\n//     },\n//     {\n//       name: \"mobileNumber\",\n//       label: \"Mobile\",\n//       type: \"text\",\n//       label_size: 12,\n//       col_size: 12,\n//       showButton: true,\n//     },\n//   ];\n\n//   const VerifyMobileN = async () => {\n//     setShowOTP(true);\n\n//     const res = await dispatch(\n//       Send_OTP({ mobileNumber: formik.values.mobileNumber })\n//     ).unwrap();\n\n//     if (res.status) {\n//       setDisabled(true);\n//     } else {\n//       toast.error(res.msg);\n//       setDisabled(false);\n//     }\n//   };\n\n//   const Verify_OTP_Function = (e) => {\n//     e.preventDefault();\n//     alert(\"tt\");\n//   };\n\n//   // const renderButton = (buttonProps) => {\n//   //   return <button {...buttonProps}>Resend</button>;\n//   // };\n//   // const renderTime = (remainingTime) => {\n//   //   return <span>{remainingTime} seconds remaining</span>;\n//   // };\n\n//   // Verify_OTP\n\n//   // useEffect(() => {\n//   //   for (let index = 0; index < 59; index--) {\n//   //     const element = index;\n//   //     console.log(\"element\", element);\n//   //   }\n//   // }, []);\n\n//   const renderButton = (buttonProps) => {\n//     return (\n//       <button className=\"btn btn-primary text-light\" {...buttonProps}>\n//         {buttonProps.remainingTime !== 0\n//           ? `Please wait for ${buttonProps.remainingTime} sec`\n//           : \"Resend\"}\n//       </button>\n//     );\n//   };\n//   const renderTime = () => React.Fragment;\n\n//   return (\n//     <>\n//       <Content\n//         title=\"Sign Up User\"\n//         col_size={7}\n//         responsive_col={\"col-md-8 col-lg-6\"}\n//       >\n//         <Formikform\n//           fieldtype={fields.filter((field) => !field.showWhen)}\n//           formik={formik}\n//           VerifyMobileN={VerifyMobileN}\n//           btn_name=\"Create My Account \"\n//           button_Size=\"col-12\"\n//           btn_Class=\"btn btn-primary btn-block\"\n//           Disable_Button={Disabled}\n//           additional_field={\n//             <>\n//               {!ShowOTP ? (\n//                 <>\n//                   <div className=\"col-12 d-flex align-items-center justify-content-between\">\n//                     <div className=\"\">\n//                       <label className={`col-lg-12`} htmlFor={\"VerifyOTP\"}>\n//                         Enter Otp\n//                         <span className=\"text-danger\">*</span>\n//                       </label>\n//                       <OTPInput\n//                         value={OTP}\n\n//                         name=\"VerifyOTP\"\n//                         onChange={setOTP}\n//                         autoFocus\n//                         OTPLength={4}\n//                         otpType=\"number\"\n//                         disabled={false}\n//                         className=\"col-6 col-sm-12 mb-3 form-control\"\n//                       />\n//                     </div>\n//                     {/* <div className=\"col-xl-10 col-md-10 col-lg-12\"> */}\n//                     {/* <ResendOTP\n//                         renderButton={renderButton}\n//                         renderTime={renderTime}\n//                       /> */}\n\n//                     <ResendOTP\n//                       renderButton={renderButton}\n//                       renderTime={renderTime}\n//                     />\n//                     <button className=\"btn btn-primary\">Verify </button>\n//                     {/* <ResendOTP\n//                         className=\"btn btn-primary\"\n//                         onResendClick={(e) => Verify_OTP_Function(e)}\n//                       /> */}\n//                     {/* </div> */}\n//                   </div>\n//                   {/* <span>Resend OTP - 59</span> */}\n//                 </>\n//               ) : (\n//                 \"\"\n//               )}\n//               {formik.errors.title && (\n//                 <div style={{ color: \"red\" }}>{formik.errors.title}</div>\n//               )}\n//             </>\n//           }\n//         />\n\n//         <p className=\"text-center my-3\">\n//           Already have an account?\n//           <Link to=\"/\">&nbsp; Sign in</Link>\n//         </p>\n//       </Content>\n\n//       <ToastButton />\n//     </>\n//   );\n// };\n\n// export default Users;\n\nimport React, { useState } from \"react\";\nimport OTPInput, { ResendOTP } from \"../lib\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OtpInputCard = ({\n  title,\n  resendOTP,\n  ...rest\n}) => {\n  _s();\n  const [OTP, setOTP] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 12\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 12\n      },\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OTPInput, {\n      value: OTP,\n      onChange: setOTP,\n      ...rest\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 243,\n    columnNumber: 5\n  }, this);\n};\n_s(OtpInputCard, \"mO6DrGcskJXK5PqNqYWO6/oGkLk=\");\n_c = OtpInputCard;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      flexDirection: \"column\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"OTP Input React\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(OtpInputCard, {\n        title: \"Secrate input with auto focus on mount\",\n        autoFocus: true,\n        OTPLength: 4,\n        placeholder: [0, 0, 0, 0],\n        otpType: \"number\",\n        disabled: false,\n        resendOTP: {},\n        secure: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ResendOTP, {\n        handelResendClick: () => alert(\"Resend clicked\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OtpInputCard, {\n        title: \"Number only input\"\n        // autoFocus\n        ,\n        OTPLength: 4,\n        otpType: \"number\",\n        disabled: false\n        // secure\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ResendOTP, {\n        renderTime: () => React.Fragment,\n        renderButton: buttonProps => {\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            ...buttonProps,\n            children: buttonProps.remainingTime !== 0 ? `Please wait for ${buttonProps.remainingTime} sec` : \"Resend\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 15\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OtpInputCard, {\n        title: \"Alphabetic input\"\n        // autoFocus\n        ,\n        OTPLength: 4,\n        otpType: \"alpha\",\n        disabled: false\n        // secure\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OtpInputCard, {\n        title: \"Alphanumeric input\"\n        // autoFocus\n        ,\n        OTPLength: 4,\n        otpType: \"alphanumeric\",\n        disabled: false\n        // secure\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OtpInputCard, {\n        title: \"Any character input\"\n        // autoFocus\n        ,\n        OTPLength: 4,\n        otpType: \"any\",\n        disabled: false\n        // secure\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OtpInputCard, {\n        title: \"Disabled\"\n        // autoFocus\n        ,\n        OTPLength: 4,\n        otpType: \"any\",\n        disabled: true\n        // secure\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OtpInputCard, {\n        title: \"6 length otp Inputs\"\n        // autoFocus\n        ,\n        OTPLength: 6,\n        otpType: \"any\",\n        disabled: false\n        // secure\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OtpInputCard, {\n        title: \"Input styling with inputStyles prop\",\n        inputClassName: \"bottom__border\"\n        // autoFocus\n        ,\n        OTPLength: 3,\n        otpType: \"any\",\n        disabled: false,\n        inputStyles: {\n          border: 0,\n          borderBottom: \"1px solid #cbcbcb\"\n        }\n        // secure\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 256,\n    columnNumber: 5\n  }, this);\n}\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"OtpInputCard\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","OTPInput","ResendOTP","jsxDEV","_jsxDEV","OtpInputCard","title","resendOTP","rest","_s","OTP","setOTP","style","padding","children","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","_c","App","display","alignItems","flexDirection","autoFocus","OTPLength","placeholder","otpType","disabled","secure","handelResendClick","alert","renderTime","Fragment","renderButton","buttonProps","remainingTime","inputClassName","inputStyles","border","borderBottom","_c2","$RefreshReg$"],"sources":["D:/Gaming/gaming/frontend/src/Components/Pages/Auth/SignUpUser.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import Content from \"../../Layout/Content/Content1\";\r\n// import Formikform from \"../../Helpers/Form\";\r\n// import { useFormik } from \"formik\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import toast from \"react-hot-toast\";\r\n// import { Link, useNavigate } from \"react-router-dom\";\r\n// import {\r\n//   Send_OTP,\r\n//   Sign_Up,\r\n//   Verify_OTP,\r\n// } from \"../../Redux/Slice/Auth/auth.slice\";\r\n// import { Name_regex, Mobile_regex } from \"../../Utils/Valid_Rejex\";\r\n// import ToastButton from \"../../Helpers/Toast\";\r\n// import OTPInput, { ResendOTP } from \"otp-input-react\";\r\n// import * as valid_err from \"../../Utils/Common_Msg\";\r\n\r\n// const Users = () => {\r\n//   const dispatch = useDispatch();\r\n//   const navigate = useNavigate();\r\n\r\n//   const [OTP, setOTP] = useState(\"\");\r\n//   const [ShowOTP, setShowOTP] = useState(false);\r\n//   const [Disabled, setDisabled] = useState(false);\r\n\r\n//   const isValidContact = (mobile) => {\r\n//     return Mobile_regex(mobile);\r\n//   };\r\n\r\n//   const isValidName = (name) => {\r\n//     return Name_regex(name);\r\n//   };\r\n\r\n//   const formik = useFormik({\r\n//     initialValues: {\r\n//       name: \"\",\r\n//       mobileNumber: \"\",\r\n//       password: \"\",\r\n//     },\r\n\r\n//     validate: (values) => {\r\n//       const errors = {};\r\n\r\n//       if (!isValidName(values.name)) {\r\n//         errors.name = valid_err.INVALID_ERROR;\r\n//       }\r\n//       if (!values.mobileNumber) {\r\n//         errors.mobileNumber = valid_err.CONTACT_ERROR;\r\n//       } else if (!isValidContact(values.mobileNumber)) {\r\n//         errors.mobileNumber = valid_err.INVALID_CONTACT_ERROR;\r\n//       }\r\n\r\n//       if (!values.password) {\r\n//         errors.password = valid_err.PASSWORD_ERROR;\r\n//       }\r\n\r\n//       return errors;\r\n//     },\r\n//     onSubmit: async (values) => {\r\n//       const req = {\r\n//         name: values.name,\r\n//         mobileNumber: values.mobileNumber,\r\n//         password: values.password,\r\n//       };\r\n\r\n//       await dispatch(Sign_Up(req))\r\n//         .unwrap()\r\n//         .then((response) => {\r\n//           if (response.status === 400) {\r\n//             toast.error(response.data.msg);\r\n//           } else if (response.status) {\r\n//             toast.success(response.msg);\r\n//             setTimeout(() => {\r\n//               navigate(\"/\");\r\n//             }, 1000);\r\n//           } else if (!response.status) {\r\n//             toast.error(response.msg);\r\n//           }\r\n//         });\r\n//     },\r\n//   });\r\n\r\n//   const fields = [\r\n//     {\r\n//       name: \"name\",\r\n//       label: \"Name\",\r\n//       type: \"text\",\r\n//       label_size: 12,\r\n//       col_size: 12,\r\n//       showButton: false,\r\n//     },\r\n\r\n//     {\r\n//       name: \"password\",\r\n//       label: \"Password\",\r\n//       type: \"password\",\r\n//       label_size: 12,\r\n//       col_size: 12,\r\n//       showButton: false,\r\n//     },\r\n//     {\r\n//       name: \"mobileNumber\",\r\n//       label: \"Mobile\",\r\n//       type: \"text\",\r\n//       label_size: 12,\r\n//       col_size: 12,\r\n//       showButton: true,\r\n//     },\r\n//   ];\r\n\r\n//   const VerifyMobileN = async () => {\r\n//     setShowOTP(true);\r\n\r\n//     const res = await dispatch(\r\n//       Send_OTP({ mobileNumber: formik.values.mobileNumber })\r\n//     ).unwrap();\r\n\r\n//     if (res.status) {\r\n//       setDisabled(true);\r\n//     } else {\r\n//       toast.error(res.msg);\r\n//       setDisabled(false);\r\n//     }\r\n//   };\r\n\r\n//   const Verify_OTP_Function = (e) => {\r\n//     e.preventDefault();\r\n//     alert(\"tt\");\r\n//   };\r\n\r\n//   // const renderButton = (buttonProps) => {\r\n//   //   return <button {...buttonProps}>Resend</button>;\r\n//   // };\r\n//   // const renderTime = (remainingTime) => {\r\n//   //   return <span>{remainingTime} seconds remaining</span>;\r\n//   // };\r\n\r\n//   // Verify_OTP\r\n\r\n//   // useEffect(() => {\r\n//   //   for (let index = 0; index < 59; index--) {\r\n//   //     const element = index;\r\n//   //     console.log(\"element\", element);\r\n//   //   }\r\n//   // }, []);\r\n\r\n//   const renderButton = (buttonProps) => {\r\n//     return (\r\n//       <button className=\"btn btn-primary text-light\" {...buttonProps}>\r\n//         {buttonProps.remainingTime !== 0\r\n//           ? `Please wait for ${buttonProps.remainingTime} sec`\r\n//           : \"Resend\"}\r\n//       </button>\r\n//     );\r\n//   };\r\n//   const renderTime = () => React.Fragment;\r\n\r\n//   return (\r\n//     <>\r\n//       <Content\r\n//         title=\"Sign Up User\"\r\n//         col_size={7}\r\n//         responsive_col={\"col-md-8 col-lg-6\"}\r\n//       >\r\n//         <Formikform\r\n//           fieldtype={fields.filter((field) => !field.showWhen)}\r\n//           formik={formik}\r\n//           VerifyMobileN={VerifyMobileN}\r\n//           btn_name=\"Create My Account \"\r\n//           button_Size=\"col-12\"\r\n//           btn_Class=\"btn btn-primary btn-block\"\r\n//           Disable_Button={Disabled}\r\n//           additional_field={\r\n//             <>\r\n//               {!ShowOTP ? (\r\n//                 <>\r\n//                   <div className=\"col-12 d-flex align-items-center justify-content-between\">\r\n//                     <div className=\"\">\r\n//                       <label className={`col-lg-12`} htmlFor={\"VerifyOTP\"}>\r\n//                         Enter Otp\r\n//                         <span className=\"text-danger\">*</span>\r\n//                       </label>\r\n//                       <OTPInput\r\n//                         value={OTP}\r\n\r\n//                         name=\"VerifyOTP\"\r\n//                         onChange={setOTP}\r\n//                         autoFocus\r\n//                         OTPLength={4}\r\n//                         otpType=\"number\"\r\n//                         disabled={false}\r\n//                         className=\"col-6 col-sm-12 mb-3 form-control\"\r\n//                       />\r\n//                     </div>\r\n//                     {/* <div className=\"col-xl-10 col-md-10 col-lg-12\"> */}\r\n//                     {/* <ResendOTP\r\n//                         renderButton={renderButton}\r\n//                         renderTime={renderTime}\r\n//                       /> */}\r\n\r\n//                     <ResendOTP\r\n//                       renderButton={renderButton}\r\n//                       renderTime={renderTime}\r\n//                     />\r\n//                     <button className=\"btn btn-primary\">Verify </button>\r\n//                     {/* <ResendOTP\r\n//                         className=\"btn btn-primary\"\r\n//                         onResendClick={(e) => Verify_OTP_Function(e)}\r\n//                       /> */}\r\n//                     {/* </div> */}\r\n//                   </div>\r\n//                   {/* <span>Resend OTP - 59</span> */}\r\n//                 </>\r\n//               ) : (\r\n//                 \"\"\r\n//               )}\r\n//               {formik.errors.title && (\r\n//                 <div style={{ color: \"red\" }}>{formik.errors.title}</div>\r\n//               )}\r\n//             </>\r\n//           }\r\n//         />\r\n\r\n//         <p className=\"text-center my-3\">\r\n//           Already have an account?\r\n//           <Link to=\"/\">&nbsp; Sign in</Link>\r\n//         </p>\r\n//       </Content>\r\n\r\n//       <ToastButton />\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default Users;\r\n\r\nimport React, { useState } from \"react\";\r\nimport OTPInput, { ResendOTP } from \"../lib\";\r\n\r\nconst OtpInputCard = ({ title, resendOTP, ...rest }) => {\r\n  const [OTP, setOTP] = useState(\"\");\r\n  return (\r\n    <div\r\n      style={{\r\n        padding: 12,\r\n      }}\r\n    >\r\n      <div style={{ marginBottom: 12 }}>{title}</div>\r\n      <OTPInput value={OTP} onChange={setOTP} {...rest} />\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n      }}\r\n    >\r\n      <h2>OTP Input React</h2>\r\n      <div>\r\n        <OtpInputCard\r\n          title=\"Secrate input with auto focus on mount\"\r\n          autoFocus\r\n          OTPLength={4}\r\n          placeholder={[0, 0, 0, 0]}\r\n          otpType=\"number\"\r\n          disabled={false}\r\n          resendOTP={{}}\r\n          secure\r\n        />\r\n        <ResendOTP handelResendClick={() => alert(\"Resend clicked\")} />\r\n        <OtpInputCard\r\n          title=\"Number only input\"\r\n          // autoFocus\r\n          OTPLength={4}\r\n          otpType=\"number\"\r\n          disabled={false}\r\n          // secure\r\n        />\r\n        <ResendOTP\r\n          renderTime={() => React.Fragment}\r\n          renderButton={(buttonProps) => {\r\n            return (\r\n              <button {...buttonProps}>\r\n                {buttonProps.remainingTime !== 0 ? `Please wait for ${buttonProps.remainingTime} sec` : \"Resend\"}\r\n              </button>\r\n            );\r\n          }}\r\n        />\r\n        <OtpInputCard\r\n          title=\"Alphabetic input\"\r\n          // autoFocus\r\n          OTPLength={4}\r\n          otpType=\"alpha\"\r\n          disabled={false}\r\n          // secure\r\n        />\r\n        <OtpInputCard\r\n          title=\"Alphanumeric input\"\r\n          // autoFocus\r\n          OTPLength={4}\r\n          otpType=\"alphanumeric\"\r\n          disabled={false}\r\n          // secure\r\n        />\r\n        <OtpInputCard\r\n          title=\"Any character input\"\r\n          // autoFocus\r\n          OTPLength={4}\r\n          otpType=\"any\"\r\n          disabled={false}\r\n          // secure\r\n        />\r\n        <OtpInputCard\r\n          title=\"Disabled\"\r\n          // autoFocus\r\n          OTPLength={4}\r\n          otpType=\"any\"\r\n          disabled={true}\r\n          // secure\r\n        />\r\n        <OtpInputCard\r\n          title=\"6 length otp Inputs\"\r\n          // autoFocus\r\n          OTPLength={6}\r\n          otpType=\"any\"\r\n          disabled={false}\r\n          // secure\r\n        />\r\n        <OtpInputCard\r\n          title=\"Input styling with inputStyles prop\"\r\n          inputClassName=\"bottom__border\"\r\n          // autoFocus\r\n          OTPLength={3}\r\n          otpType=\"any\"\r\n          disabled={false}\r\n          inputStyles={{\r\n            border: 0,\r\n            borderBottom: \"1px solid #cbcbcb\",\r\n          }}\r\n          // secure\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,IAAIC,SAAS,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,YAAY,GAAGA,C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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}