{"ast":null,"code":"var _jsxFileName = \"D:\\\\Gaming\\\\gaming\\\\frontend\\\\src\\\\Components\\\\Pages\\\\SuperAdmin\\\\Users\\\\AddUsers.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Content from \"../../../Layout/Content/Content\";\nimport Formikform from \"../../../Helpers/Form\";\n// import * as valid_err from \"../../../Utils/Common_Messages\";\nimport { useFormik } from \"formik\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Add_User = () => {\n  _s();\n  const formik = useFormik({\n    initialValues: {\n      panel_name: \"\",\n      domain: \"\",\n      port: \"\",\n      key: \"\",\n      ip_address: \"\",\n      is_active: 1,\n      is_expired: 0,\n      theme_id: \"\",\n      db_url: \"\",\n      db_name: \"\",\n      broker_id: [],\n      Create_Strategy: false,\n      Option_chain: false,\n      Strategy_plan: false,\n      backend_rul: \"\"\n    },\n    validate: values => {\n      const errors = {};\n\n      // if (!values.panel_name && formik.touched.panel_name) {\n      //   errors.panel_name = valid_err.PANEL_NAME_ERROR;\n      // }\n\n      // if (!values.domain) {\n      //   errors.domain = valid_err.DOMAIN_ERROR;\n      // }\n\n      // if (!values.port) {\n      //   errors.port = valid_err.PORT_ERROR;\n      // }\n\n      // if (!values.key) {\n      //   errors.key = valid_err.KEY_ERROR;\n      // }\n\n      // if (!values.db_url) {\n      //   errors.db_url = valid_err.DBURL_ERROR;\n      // }\n\n      // if (!values.db_name) {\n      //   errors.db_name = valid_err.DBNAME_ERROR;\n      // }\n\n      // if (!values.backend_rul) {\n      //   errors.backend_rul = valid_err.DBNAME_ERROR;\n      // }\n\n      return errors;\n    },\n    onSubmit: async values => {\n      const req = {\n        // panel_name: values.panel_name,\n        // domain: values.domain,\n        // port: values.port,\n        // key: values.key,\n        // ip_address: values.ip_address,\n        // theme_id: values.theme_id,\n        // db_url: values.db_url,\n        // db_name: values.db_name,\n        // broker_id: state1,\n        // Create_Strategy:\n        //   values.Create_Strategy && values.Create_Strategy ? 1 : 0,\n        // Option_chain: values.Option_chain && values.Option_chain ? 1 : 0,\n        // Strategy_plan: values.Strategy_plan && values.Strategy_plan ? 1 : 0,\n        // backend_rul: values.backend_rul,\n      };\n\n      // await dispatch(Add_Panel_data({ req: req, token: user_token }))\n      //   .unwrap()\n      //   .then((response) => {\n      //     if (response.status === 409) {\n      //       toast.error(response.data.msg);\n      //     } else if (response.status) {\n      //       toast.success(response.msg);\n\n      //       setTimeout(() => {\n      //         navigate(\"/super/alladmins\");\n      //       }, 1000);\n      //     } else if (!response.status) {\n      //       toast.error(response.msg);\n      //     }\n      //   });\n    }\n  });\n  const fields = [{\n    name: \"mobileNumber\",\n    label: \"Mobile Number\",\n    type: \"text\",\n    label_size: 12,\n    col_size: 6\n  }, {\n    name: \"password\",\n    label: \"Password\",\n    type: \"password\",\n    label_size: 12,\n    col_size: 6\n  }, {\n    name: \"name\",\n    label: \"Name\",\n    type: \"text\",\n    label_size: 12,\n    col_size: 6\n  }];\n  const permisstionArray = [{\n    id: 0,\n    name: \"Game Create\",\n    value: \"gameCreated\"\n  }, {\n    id: 1,\n    name: \"Edit Game \",\n    value: \"gameEdit\"\n  }, {\n    id: 2,\n    name: \"Delete Game\",\n    value: \"gameDelete\"\n  }, {\n    id: 3,\n    name: \"View Game\",\n    value: \"viewGame\"\n  }, {\n    id: 4,\n    name: \" Create User\",\n    value: \"createUser\"\n  }, {\n    id: 5,\n    name: \"View Users\",\n    value: \"viewUser\"\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Content, {\n      title: \"Add User\",\n      col_size: 12,\n      children: /*#__PURE__*/_jsxDEV(Formikform, {\n        fieldtype: fields.filter(field => !field.showWhen),\n        formik: formik,\n        btn_name: \"Add Panel\",\n        before_submit: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: permisstionArray.map(broker => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `col-lg-2 mt-2`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row \",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-lg-12 \",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"form-check custom-checkbox mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    className: \"form-check-input\",\n                    name: broker.name,\n                    value: broker.id,\n                    onChange: e => handleSBrokerChange(e, broker)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 168,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"form-check-label\",\n                    for: broker.title,\n                    children: broker.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this))\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Add_User, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n_c = Add_User;\nexport default Add_User;\nvar _c;\n$RefreshReg$(_c, \"Add_User\");","map":{"version":3,"names":["React","Content","Formikform","useFormik","jsxDEV","_jsxDEV","Fragment","_Fragment","Add_User","_s","formik","initialValues","panel_name","domain","port","key","ip_address","is_active","is_expired","theme_id","db_url","db_name","broker_id","Create_Strategy","Option_chain","Strategy_plan","backend_rul","validate","values","errors","onSubmit","req","fields","name","label","type","label_size","col_size","permisstionArray","id","value","children","title","fieldtype","filter","field","showWhen","btn_name","before_submit","map","broker","className","class","onChange","e","handleSBrokerChange","fileName","_jsxFileName","lineNumber","columnNumber","for","_c","$RefreshReg$"],"sources":["D:/Gaming/gaming/frontend/src/Components/Pages/SuperAdmin/Users/AddUsers.js"],"sourcesContent":["import React from \"react\";\r\nimport Content from \"../../../Layout/Content/Content\";\r\nimport Formikform from \"../../../Helpers/Form\";\r\n// import * as valid_err from \"../../../Utils/Common_Messages\";\r\nimport { useFormik } from \"formik\";\r\n\r\nconst Add_User = () => {\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      panel_name: \"\",\r\n      domain: \"\",\r\n      port: \"\",\r\n      key: \"\",\r\n      ip_address: \"\",\r\n      is_active: 1,\r\n      is_expired: 0,\r\n      theme_id: \"\",\r\n      db_url: \"\",\r\n      db_name: \"\",\r\n      broker_id: [],\r\n      Create_Strategy: false,\r\n      Option_chain: false,\r\n      Strategy_plan: false,\r\n      backend_rul: \"\",\r\n    },\r\n\r\n    validate: (values) => {\r\n      const errors = {};\r\n\r\n      // if (!values.panel_name && formik.touched.panel_name) {\r\n      //   errors.panel_name = valid_err.PANEL_NAME_ERROR;\r\n      // }\r\n\r\n      // if (!values.domain) {\r\n      //   errors.domain = valid_err.DOMAIN_ERROR;\r\n      // }\r\n\r\n      // if (!values.port) {\r\n      //   errors.port = valid_err.PORT_ERROR;\r\n      // }\r\n\r\n      // if (!values.key) {\r\n      //   errors.key = valid_err.KEY_ERROR;\r\n      // }\r\n\r\n      // if (!values.db_url) {\r\n      //   errors.db_url = valid_err.DBURL_ERROR;\r\n      // }\r\n\r\n      // if (!values.db_name) {\r\n      //   errors.db_name = valid_err.DBNAME_ERROR;\r\n      // }\r\n\r\n      // if (!values.backend_rul) {\r\n      //   errors.backend_rul = valid_err.DBNAME_ERROR;\r\n      // }\r\n\r\n      return errors;\r\n    },\r\n    onSubmit: async (values) => {\r\n      const req = {\r\n        // panel_name: values.panel_name,\r\n        // domain: values.domain,\r\n        // port: values.port,\r\n        // key: values.key,\r\n        // ip_address: values.ip_address,\r\n        // theme_id: values.theme_id,\r\n        // db_url: values.db_url,\r\n        // db_name: values.db_name,\r\n        // broker_id: state1,\r\n        // Create_Strategy:\r\n        //   values.Create_Strategy && values.Create_Strategy ? 1 : 0,\r\n        // Option_chain: values.Option_chain && values.Option_chain ? 1 : 0,\r\n        // Strategy_plan: values.Strategy_plan && values.Strategy_plan ? 1 : 0,\r\n        // backend_rul: values.backend_rul,\r\n      };\r\n\r\n      // await dispatch(Add_Panel_data({ req: req, token: user_token }))\r\n      //   .unwrap()\r\n      //   .then((response) => {\r\n      //     if (response.status === 409) {\r\n      //       toast.error(response.data.msg);\r\n      //     } else if (response.status) {\r\n      //       toast.success(response.msg);\r\n\r\n      //       setTimeout(() => {\r\n      //         navigate(\"/super/alladmins\");\r\n      //       }, 1000);\r\n      //     } else if (!response.status) {\r\n      //       toast.error(response.msg);\r\n      //     }\r\n      //   });\r\n    },\r\n  });\r\n\r\n  const fields = [\r\n    {\r\n      name: \"mobileNumber\",\r\n      label: \"Mobile Number\",\r\n      type: \"text\",\r\n      label_size: 12,\r\n      col_size: 6,\r\n    },\r\n    {\r\n      name: \"password\",\r\n      label: \"Password\",\r\n      type: \"password\",\r\n      label_size: 12,\r\n      col_size: 6,\r\n    },\r\n\r\n    {\r\n      name: \"name\",\r\n      label: \"Name\",\r\n      type: \"text\",\r\n      label_size: 12,\r\n      col_size: 6,\r\n    },\r\n  ];\r\n\r\n  const permisstionArray = [\r\n    {\r\n      id: 0,\r\n      name: \"Game Create\",\r\n      value: \"gameCreated\",\r\n    },\r\n    {\r\n      id: 1,\r\n      name: \"Edit Game \",\r\n      value: \"gameEdit\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Delete Game\",\r\n      value: \"gameDelete\",\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"View Game\",\r\n      value: \"viewGame\",\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \" Create User\",\r\n      value: \"createUser\",\r\n    },\r\n    {\r\n      id: 5,\r\n      name: \"View Users\",\r\n      value: \"viewUser\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Content title=\"Add User\" col_size={12}>\r\n        <Formikform\r\n          fieldtype={fields.filter((field) => !field.showWhen)}\r\n          formik={formik}\r\n          btn_name=\"Add Panel\"\r\n          before_submit={\r\n            <>\r\n              {permisstionArray.map((broker) => (\r\n              <div className={`col-lg-2 mt-2`}>\r\n                <div className=\"row \">\r\n                  <div className=\"col-lg-12 \">\r\n                    <div class=\"form-check custom-checkbox mb-3\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        className=\"form-check-input\"\r\n                        name={broker.name}\r\n                        value={broker.id}\r\n                        onChange={(e) => handleSBrokerChange(e, broker)}\r\n                      />\r\n                      <label className=\"form-check-label\" for={broker.title}>\r\n                        {broker.title}\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n             ))} \r\n\r\n              {/* {formik.errors.title && (\r\n                <div style={{ color: \"red\" }}>{formik.errors.title}</div>\r\n              )} */}\r\n            </>\r\n          }\r\n        />\r\n      </Content>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Add_User;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}