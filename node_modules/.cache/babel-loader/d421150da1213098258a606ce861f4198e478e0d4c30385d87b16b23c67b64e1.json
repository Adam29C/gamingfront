{"ast":null,"code":"export const Email_regex = email => {\n  const emailRegex = /^[a-zA-Z0-9._%+-]+@(gmail|yahoo|ymail|rediffmail|hotmail|outlook|aol|icloud|protonmail|example)\\.(com|co\\.in|in|net|org|edu|gov|uk|us|info|biz|io|...)[a-zA-Z]{0,}$/;\n  return emailRegex.test(email);\n};\n_c = Email_regex;\nexport const Name_regex = name => {\n  const emailRegex = /^[a-zA-Z ]+$/;\n  return emailRegex.test(name);\n};\n_c2 = Name_regex;\nexport const Stg_regex = name => {\n  const StgRegex = /^[a-zA-Z ]+$/;\n  return StgRegex.test(name);\n};\n_c3 = Stg_regex;\nexport const Mobile_regex = mobile => {\n  const MobileRegex = /^[0-9]{10}$/;\n  return MobileRegex.test(mobile);\n};\n_c4 = Mobile_regex;\nexport const No_Negetive_Input_regex = mobile => {\n  const value = /^(?!0*(\\.0*)?$)\\d+(\\.\\d+)?$/;\n  return value.test(mobile);\n};\n_c5 = No_Negetive_Input_regex;\nexport const ValidYoutubeUrl = url => {\n  // Regular expression to match a YouTube URL\n  const youtubeRegex = /^(https?:\\/\\/)?(www\\.)?(youtube\\.com\\/(watch\\?v=|embed\\/|v\\/)|youtu\\.be\\/)[\\w-]+(&[\\w%=]*)?$/;\n  return youtubeRegex.test(url);\n};\n_c6 = ValidYoutubeUrl;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"Email_regex\");\n$RefreshReg$(_c2, \"Name_regex\");\n$RefreshReg$(_c3, \"Stg_regex\");\n$RefreshReg$(_c4, \"Mobile_regex\");\n$RefreshReg$(_c5, \"No_Negetive_Input_regex\");\n$RefreshReg$(_c6, \"ValidYoutubeUrl\");","map":{"version":3,"names":["Email_regex","email","emailRegex","test","_c","Name_regex","name","_c2","Stg_regex","StgRegex","_c3","Mobile_regex","mobile","MobileRegex","_c4","No_Negetive_Input_regex","value","_c5","ValidYoutubeUrl","url","youtubeRegex","_c6","$RefreshReg$"],"sources":["D:/Gaming/gaming/frontend/src/Components/Utils/Valid_Rejex.js"],"sourcesContent":["export const Email_regex = (email) => {\r\n  const emailRegex =\r\n    /^[a-zA-Z0-9._%+-]+@(gmail|yahoo|ymail|rediffmail|hotmail|outlook|aol|icloud|protonmail|example)\\.(com|co\\.in|in|net|org|edu|gov|uk|us|info|biz|io|...)[a-zA-Z]{0,}$/;\r\n  return emailRegex.test(email);\r\n};\r\n\r\nexport const Name_regex = (name) => {\r\n  const emailRegex = /^[a-zA-Z ]+$/;\r\n  return emailRegex.test(name);\r\n};\r\n\r\nexport const Stg_regex = (name) => {\r\n  const StgRegex = /^[a-zA-Z ]+$/;\r\n  return StgRegex.test(name);\r\n};\r\n\r\nexport const Mobile_regex = (mobile) => {\r\n  const MobileRegex = /^[0-9]{10}$/;\r\n  return MobileRegex.test(mobile);\r\n};\r\n\r\nexport const No_Negetive_Input_regex = (mobile) => {\r\n  const value = /^(?!0*(\\.0*)?$)\\d+(\\.\\d+)?$/;\r\n  return value.test(mobile);\r\n};\r\n\r\nexport const ValidYoutubeUrl = (url) => {\r\n  // Regular expression to match a YouTube URL\r\n  const youtubeRegex =\r\n    /^(https?:\\/\\/)?(www\\.)?(youtube\\.com\\/(watch\\?v=|embed\\/|v\\/)|youtu\\.be\\/)[\\w-]+(&[\\w%=]*)?$/;\r\n\r\n  return youtubeRegex.test(url);\r\n};\r\n"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAIC,KAAK,IAAK;EACpC,MAAMC,UAAU,GACd,qKAAqK;EACvK,OAAOA,UAAU,CAACC,IAAI,CAACF,KAAK,CAAC;AAC/B,CAAC;AAACG,EAAA,GAJWJ,WAAW;AAMxB,OAAO,MAAMK,UAAU,GAAIC,IAAI,IAAK;EAClC,MAAMJ,UAAU,GAAG,cAAc;EACjC,OAAOA,UAAU,CAACC,IAAI,CAACG,IAAI,CAAC;AAC9B,CAAC;AAACC,GAAA,GAHWF,UAAU;AAKvB,OAAO,MAAMG,SAAS,GAAIF,IAAI,IAAK;EACjC,MAAMG,QAAQ,GAAG,cAAc;EAC/B,OAAOA,QAAQ,CAACN,IAAI,CAACG,IAAI,CAAC;AAC5B,CAAC;AAACI,GAAA,GAHWF,SAAS;AAKtB,OAAO,MAAMG,YAAY,GAAIC,MAAM,IAAK;EACtC,MAAMC,WAAW,GAAG,aAAa;EACjC,OAAOA,WAAW,CAACV,IAAI,CAACS,MAAM,CAAC;AACjC,CAAC;AAACE,GAAA,GAHWH,YAAY;AAKzB,OAAO,MAAMI,uBAAuB,GAAIH,MAAM,IAAK;EACjD,MAAMI,KAAK,GAAG,6BAA6B;EAC3C,OAAOA,KAAK,CAACb,IAAI,CAACS,MAAM,CAAC;AAC3B,CAAC;AAACK,GAAA,GAHWF,uBAAuB;AAKpC,OAAO,MAAMG,eAAe,GAAIC,GAAG,IAAK;EACtC;EACA,MAAMC,YAAY,GAChB,8FAA8F;EAEhG,OAAOA,YAAY,CAACjB,IAAI,CAACgB,GAAG,CAAC;AAC/B,CAAC;AAACE,GAAA,GANWH,eAAe;AAAA,IAAAd,EAAA,EAAAG,GAAA,EAAAG,GAAA,EAAAI,GAAA,EAAAG,GAAA,EAAAI,GAAA;AAAAC,YAAA,CAAAlB,EAAA;AAAAkB,YAAA,CAAAf,GAAA;AAAAe,YAAA,CAAAZ,GAAA;AAAAY,YAAA,CAAAR,GAAA;AAAAQ,YAAA,CAAAL,GAAA;AAAAK,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}