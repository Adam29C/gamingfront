{"ast":null,"code":"var _jsxFileName = \"D:\\\\Gaming\\\\gaming\\\\frontend\\\\src\\\\Components\\\\Pages\\\\Auth\\\\SignUpUser.js\";\n// import React, { useState } from \"react\";\nimport Content from \"../../Layout/Content/Content1\";\n// import Formikform from \"../../Helpers/Form\";\n// import { useFormik } from \"formik\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import toast from \"react-hot-toast\";\n// import { Link, useNavigate } from \"react-router-dom\";\n// import { Sign_Up } from \"../../Redux/Slice/Auth/auth.slice\";\n// import { Name_regex, Mobile_regex } from \"../../Utils/Valid_Rejex\";\n// import ToastButton from \"../../Helpers/Toast\";\n// import OTPInput, { ResendOTP } from \"otp-input-react\";\n\n// import * as valid_err from \"../../Utils/Common_Msg\";\n\n// const Users = () => {\n//   const dispatch = useDispatch();\n//   const navigate = useNavigate();\n\n//   const [OTP, setOTP] = useState(\"\");\n\n//   const isValidContact = (mobile) => {\n//     return Mobile_regex(mobile);\n//   };\n//   const isValidName = (name) => {\n//     return Name_regex(name);\n//   };\n\n//   const formik = useFormik({\n//     initialValues: {\n//       name: \"\",\n//       mobileNumber: \"\",\n//       password: \"\",\n//     },\n\n//     validate: (values) => {\n//       const errors = {};\n\n//       if (!isValidName(values.name)) {\n//         errors.name = valid_err.INVALID_ERROR;\n//       }\n//       if (!values.mobileNumber) {\n//         errors.mobileNumber = valid_err.CONTACT_ERROR;\n//       } else if (!isValidContact(values.mobileNumber)) {\n//         errors.mobileNumber = valid_err.INVALID_CONTACT_ERROR;\n//       }\n\n//       if (!values.password) {\n//         errors.password = valid_err.PASSWORD_ERROR;\n//       }\n\n//       return errors;\n//     },\n//     onSubmit: async (values) => {\n//       const req = {\n//         name: values.name,\n//         mobileNumber: values.mobileNumber,\n//         password: values.password,\n//       };\n\n//       await dispatch(Sign_Up(req))\n//         .unwrap()\n//         .then((response) => {\n//           if (response.status === 400) {\n//             toast.error(response.data.msg);\n//           } else if (response.status) {\n//             toast.success(response.msg);\n//             setTimeout(() => {\n//               navigate(\"/\");\n//             }, 1000);\n//           } else if (!response.status) {\n//             toast.error(response.msg);\n//           }\n//         });\n//     },\n//   });\n\n//   const fields = [\n//     {\n//       name: \"name\",\n//       label: \"Name\",\n//       type: \"text\",\n//       label_size: 12,\n//       col_size: 12,\n//     },\n\n//     {\n//       name: \"password\",\n//       label: \"Password\",\n//       type: \"password\",\n//       label_size: 12,\n//       col_size: 12,\n//     },\n//     {\n//       name: \"mobileNumber\",\n//       label: \"Mobile\",\n//       type: \"text\",\n//       label_size: 12,\n//       col_size: 12,\n//     },\n//   ];\n\n//   return (\n//     <>\n//       <Content\n//         title=\"Sign Up User\"\n//         col_size={7}\n//         responsive_col={\"col-md-8 col-lg-6\"}\n//       >\n//         <Formikform\n//           fieldtype={fields.filter((field) => !field.showWhen)}\n//           formik={formik}\n//           btn_name=\"Create My Account \"\n//           btn_Class=\"btn btn-primary btn-block\"\n//           additional_field={\n//             <>\n//               {formik.errors.title && (\n//                 <div style={{ color: \"red\" }}>{formik.errors.title}</div>\n//               )}\n//             </>\n//           }\n//         />\n\n//         <p className=\"text-center my-3\">\n//           Already have an account?\n//           <Link to=\"/\">&nbsp; Sign in</Link>\n//         </p>\n\n//         <OTPInput\n//           value={OTP}\n//           onChange={setOTP}\n//           autoFocus\n//           OTPLength={4}\n//           otpType=\"number\"\n//           disabled={false}\n//           secure\n//         />\n//         <ResendOTP onResendClick={() => console.log(\"Resend clicked\")} />\n//       </Content>\n\n//       <ToastButton />\n//     </>\n//   );\n// };\n\n// export default Users;\n\nimport React from \"react\";\nimport FormWizard from \"react-form-wizard-component\";\nimport \"react-form-wizard-component/dist/style.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function customTitle() {\n  const handleComplete = () => {\n    console.log(\"Form completed!\");\n    // Handle form completion logic here\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Content\n    // title=\"Sign Up User\"\n    , {\n      col_size: 7,\n      responsive_col: \"col-md-8 col-lg-6\",\n      children: /*#__PURE__*/_jsxDEV(FormWizard, {\n        onComplete: handleComplete\n        // title=\"My custom title\"\n        // subtitle=\"My custom subcription\"\n        ,\n        children: [/*#__PURE__*/_jsxDEV(FormWizard.TabContent, {\n          title: \"Personal details\",\n          icon: \"ti-user\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"First Tab\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Some content for the first tab\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormWizard.TabContent, {\n          title: \"Additional Info\",\n          icon: \"ti-settings\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Second Tab\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Some content for the second tab\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormWizard.TabContent, {\n          title: \"Last step\",\n          icon: \"ti-check\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Last Tab\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Some content for the last tab\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}","map":{"version":3,"names":["Content","React","FormWizard","jsxDEV","_jsxDEV","Fragment","_Fragment","customTitle","handleComplete","console","log","children","col_size","responsive_col","onComplete","TabContent","title","icon","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["D:/Gaming/gaming/frontend/src/Components/Pages/Auth/SignUpUser.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\nimport Content from \"../../Layout/Content/Content1\";\r\n// import Formikform from \"../../Helpers/Form\";\r\n// import { useFormik } from \"formik\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import toast from \"react-hot-toast\";\r\n// import { Link, useNavigate } from \"react-router-dom\";\r\n// import { Sign_Up } from \"../../Redux/Slice/Auth/auth.slice\";\r\n// import { Name_regex, Mobile_regex } from \"../../Utils/Valid_Rejex\";\r\n// import ToastButton from \"../../Helpers/Toast\";\r\n// import OTPInput, { ResendOTP } from \"otp-input-react\";\r\n\r\n// import * as valid_err from \"../../Utils/Common_Msg\";\r\n\r\n// const Users = () => {\r\n//   const dispatch = useDispatch();\r\n//   const navigate = useNavigate();\r\n\r\n//   const [OTP, setOTP] = useState(\"\");\r\n\r\n//   const isValidContact = (mobile) => {\r\n//     return Mobile_regex(mobile);\r\n//   };\r\n//   const isValidName = (name) => {\r\n//     return Name_regex(name);\r\n//   };\r\n\r\n//   const formik = useFormik({\r\n//     initialValues: {\r\n//       name: \"\",\r\n//       mobileNumber: \"\",\r\n//       password: \"\",\r\n//     },\r\n\r\n//     validate: (values) => {\r\n//       const errors = {};\r\n\r\n//       if (!isValidName(values.name)) {\r\n//         errors.name = valid_err.INVALID_ERROR;\r\n//       }\r\n//       if (!values.mobileNumber) {\r\n//         errors.mobileNumber = valid_err.CONTACT_ERROR;\r\n//       } else if (!isValidContact(values.mobileNumber)) {\r\n//         errors.mobileNumber = valid_err.INVALID_CONTACT_ERROR;\r\n//       }\r\n\r\n//       if (!values.password) {\r\n//         errors.password = valid_err.PASSWORD_ERROR;\r\n//       }\r\n\r\n//       return errors;\r\n//     },\r\n//     onSubmit: async (values) => {\r\n//       const req = {\r\n//         name: values.name,\r\n//         mobileNumber: values.mobileNumber,\r\n//         password: values.password,\r\n//       };\r\n\r\n//       await dispatch(Sign_Up(req))\r\n//         .unwrap()\r\n//         .then((response) => {\r\n//           if (response.status === 400) {\r\n//             toast.error(response.data.msg);\r\n//           } else if (response.status) {\r\n//             toast.success(response.msg);\r\n//             setTimeout(() => {\r\n//               navigate(\"/\");\r\n//             }, 1000);\r\n//           } else if (!response.status) {\r\n//             toast.error(response.msg);\r\n//           }\r\n//         });\r\n//     },\r\n//   });\r\n\r\n//   const fields = [\r\n//     {\r\n//       name: \"name\",\r\n//       label: \"Name\",\r\n//       type: \"text\",\r\n//       label_size: 12,\r\n//       col_size: 12,\r\n//     },\r\n\r\n//     {\r\n//       name: \"password\",\r\n//       label: \"Password\",\r\n//       type: \"password\",\r\n//       label_size: 12,\r\n//       col_size: 12,\r\n//     },\r\n//     {\r\n//       name: \"mobileNumber\",\r\n//       label: \"Mobile\",\r\n//       type: \"text\",\r\n//       label_size: 12,\r\n//       col_size: 12,\r\n//     },\r\n//   ];\r\n\r\n//   return (\r\n//     <>\r\n//       <Content\r\n//         title=\"Sign Up User\"\r\n//         col_size={7}\r\n//         responsive_col={\"col-md-8 col-lg-6\"}\r\n//       >\r\n//         <Formikform\r\n//           fieldtype={fields.filter((field) => !field.showWhen)}\r\n//           formik={formik}\r\n//           btn_name=\"Create My Account \"\r\n//           btn_Class=\"btn btn-primary btn-block\"\r\n//           additional_field={\r\n//             <>\r\n//               {formik.errors.title && (\r\n//                 <div style={{ color: \"red\" }}>{formik.errors.title}</div>\r\n//               )}\r\n//             </>\r\n//           }\r\n//         />\r\n\r\n//         <p className=\"text-center my-3\">\r\n//           Already have an account?\r\n//           <Link to=\"/\">&nbsp; Sign in</Link>\r\n//         </p>\r\n\r\n//         <OTPInput\r\n//           value={OTP}\r\n//           onChange={setOTP}\r\n//           autoFocus\r\n//           OTPLength={4}\r\n//           otpType=\"number\"\r\n//           disabled={false}\r\n//           secure\r\n//         />\r\n//         <ResendOTP onResendClick={() => console.log(\"Resend clicked\")} />\r\n//       </Content>\r\n\r\n//       <ToastButton />\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default Users;\r\n\r\nimport React from \"react\";\r\nimport FormWizard from \"react-form-wizard-component\";\r\nimport \"react-form-wizard-component/dist/style.css\";\r\n\r\nexport default function customTitle() {\r\n  const handleComplete = () => {\r\n    console.log(\"Form completed!\");\r\n    // Handle form completion logic here\r\n  };\r\n  return (\r\n    <>\r\n      <Content\r\n        // title=\"Sign Up User\"\r\n        col_size={7}\r\n        responsive_col={\"col-md-8 col-lg-6\"}\r\n      >\r\n        <FormWizard\r\n          onComplete={handleComplete}\r\n          // title=\"My custom title\"\r\n          // subtitle=\"My custom subcription\"\r\n        >\r\n          <FormWizard.TabContent title=\"Personal details\" icon=\"ti-user\">\r\n            <h3>First Tab</h3>\r\n            <p>Some content for the first tab</p>\r\n          </FormWizard.TabContent>\r\n          <FormWizard.TabContent title=\"Additional Info\" icon=\"ti-settings\">\r\n            <h3>Second Tab</h3>\r\n            <p>Some content for the second tab</p>\r\n          </FormWizard.TabContent>\r\n          <FormWizard.TabContent title=\"Last step\" icon=\"ti-check\">\r\n            <h3>Last Tab</h3>\r\n            <p>Some content for the last tab</p>\r\n          </FormWizard.TabContent>\r\n        </FormWizard>\r\n      </Content>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";AAAA;AACA,OAAOA,OAAO,MAAM,+BAA+B;AACnzB,OAAOC,UAAU,MAAM,6BAA6B;AACpD,OAAO,4CAA4C;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEpD,eAAe,SAASC,WAAWA,CAAA,EAAG;EACpC,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3BC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAC9B;EACF,CAAC;EACD,oBACEN,OAAA,CAAAE,SAAA;IAAAK,QAAA,eACEP,OAAA,CAACJ;IACC;IAAA;MACAY,QAAQ,EAAE,CAAE;MACZC,cAAc,EAAE,mBAAoB;MAAAF,QAAA,eAEpCP,OAAA,CAACF,UAAU;QACTY,UAAU,EAAEN;QACZ;QACA;QAAA;QAAAG,QAAA,gBAEAP,OAAA,CAACF,UAAU,CAACa,UAAU;UAACC,KAAK,EAAC,kBAAkB;UAACC,IAAI,EAAC,SAAS;UAAAN,QAAA,gBAC5DP,OAAA;YAAAO,QAAA,EAAI;UAAS;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAClBjB,OAAA;YAAAO,QAAA,EAAG;UAA8B;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChB,CAAC,eACxBjB,OAAA,CAACF,UAAU,CAACa,UAAU;UAACC,KAAK,EAAC,iBAAiB;UAACC,IAAI,EAAC,aAAa;UAAAN,QAAA,gBAC/DP,OAAA;YAAAO,QAAA,EAAI;UAAU;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACnBjB,OAAA;YAAAO,QAAA,EAAG;UAA+B;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjB,CAAC,eACxBjB,OAAA,CAACF,UAAU,CAACa,UAAU;UAACC,KAAK,EAAC,WAAW;UAACC,IAAI,EAAC,UAAU;UAAAN,QAAA,gBACtDP,OAAA;YAAAO,QAAA,EAAI;UAAQ;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjBjB,OAAA;YAAAO,QAAA,EAAG;UAA6B;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACf,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACd;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC,gBACV,CAAC;AAEP","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}