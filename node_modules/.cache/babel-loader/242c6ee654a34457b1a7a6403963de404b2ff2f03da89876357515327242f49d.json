{"ast":null,"code":"var _jsxFileName = \"D:\\\\Gaming\\\\gaming\\\\frontend\\\\src\\\\Components\\\\Routes\\\\Routing.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// import React, { useEffect } from \"react\";\n// import { Route, Routes, useLocation, useNavigate } from \"react-router-dom\";\n// // import Admin from \"./Admin\";\n// import SuperAdmin from \"./Superadmin\";\n// import Admin from \"./Admin\";\n// import Users from \"./User\";\n// import Wraper from \"../Pages/Users/Wraper/Wraper\";\n\n// import Login from \"../Pages/Auth/Auth\";\n// import SignUpUser from \"../Pages/Auth/SignUpUser\";\n// import Otp from \"../Pages/Auth/OtpProcess\";\n// import ForgotPassword from \"../Pages/Auth/ForgotPassword\";\n\n// // import NotFound from \"../Layout/NotFound\"\n\n// const Routing = () => {\n//   const location = useLocation();\n\n//   const navigate = useNavigate();\n//   const roles = JSON.parse(localStorage.getItem(\"roles\"));\n//   const accessToken = localStorage.getItem(\"token\");\n\n//   return (\n//     <>\n//       <Routes>\n//         <Route\n//           path=\"/super/*\"\n//           element={roles === 0 ? <SuperAdmin /> : <Wraper />}\n//         />\n//         {/* <Route path=\"/admin/*\" element={roles === 1  ? <Admin /> : <Wraper/>} /> */}\n//         <Route path=\"/*\" element={roles === 2 ? <Users /> : <Wraper />} />\n//         <Route path=\"/login\" element={<Login />} />\n//         <Route path=\"/signup\" element={<SignUpUser />} />\n//         <Route path=\"/verifyotp\" element={<Otp />} />\n//         <Route path=\"/forgetpassword\" element={<ForgotPassword />} />\n//       </Routes>\n//     </>\n//   );\n// };\n\n// export default Routing;\n\nconst Routing = () => {\n  _s();\n  const location = useLocation();\n  const roles = JSON.parse(localStorage.getItem(\"roles\"));\n\n  // Check if user is authenticated\n  const isAuthenticated = !!localStorage.getItem(\"token\");\n  return isAuthenticated ? /*#__PURE__*/_jsxDEV(ProtectedRoutes, {\n    roles: roles\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 28\n  }, this) : /*#__PURE__*/_jsxDEV(PublicRoutes, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 64\n  }, this);\n};\n_s(Routing, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", true);\n_c = Routing;\nexport default Routing;\nvar _c;\n$RefreshReg$(_c, \"Routing\");","map":{"version":3,"names":["Routing","_s","location","useLocation","roles","JSON","parse","localStorage","getItem","isAuthenticated","_jsxDEV","ProtectedRoutes","fileName","_jsxFileName","lineNumber","columnNumber","PublicRoutes","_c","$RefreshReg$"],"sources":["D:/Gaming/gaming/frontend/src/Components/Routes/Routing.js"],"sourcesContent":["// import React, { useEffect } from \"react\";\r\n// import { Route, Routes, useLocation, useNavigate } from \"react-router-dom\";\r\n// // import Admin from \"./Admin\";\r\n// import SuperAdmin from \"./Superadmin\";\r\n// import Admin from \"./Admin\";\r\n// import Users from \"./User\";\r\n// import Wraper from \"../Pages/Users/Wraper/Wraper\";\r\n\r\n// import Login from \"../Pages/Auth/Auth\";\r\n// import SignUpUser from \"../Pages/Auth/SignUpUser\";\r\n// import Otp from \"../Pages/Auth/OtpProcess\";\r\n// import ForgotPassword from \"../Pages/Auth/ForgotPassword\";\r\n\r\n// // import NotFound from \"../Layout/NotFound\"\r\n\r\n// const Routing = () => {\r\n//   const location = useLocation();\r\n\r\n//   const navigate = useNavigate();\r\n//   const roles = JSON.parse(localStorage.getItem(\"roles\"));\r\n//   const accessToken = localStorage.getItem(\"token\");\r\n\r\n\r\n//   return (\r\n//     <>\r\n//       <Routes>\r\n//         <Route\r\n//           path=\"/super/*\"\r\n//           element={roles === 0 ? <SuperAdmin /> : <Wraper />}\r\n//         />\r\n//         {/* <Route path=\"/admin/*\" element={roles === 1  ? <Admin /> : <Wraper/>} /> */}\r\n//         <Route path=\"/*\" element={roles === 2 ? <Users /> : <Wraper />} />\r\n//         <Route path=\"/login\" element={<Login />} />\r\n//         <Route path=\"/signup\" element={<SignUpUser />} />\r\n//         <Route path=\"/verifyotp\" element={<Otp />} />\r\n//         <Route path=\"/forgetpassword\" element={<ForgotPassword />} />\r\n//       </Routes>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default Routing;\r\n\r\n\r\n\r\n\r\nconst Routing = () => {\r\n  const location = useLocation();\r\n  const roles = JSON.parse(localStorage.getItem(\"roles\"));\r\n\r\n  // Check if user is authenticated\r\n  const isAuthenticated = !!localStorage.getItem(\"token\");\r\n\r\n  return isAuthenticated ? <ProtectedRoutes roles={roles} /> : <PublicRoutes />;\r\n};\r\n\r\nexport default Routing;"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA,MAAMA,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,QAAQ,GAAGC,WAAW,CAAC,CAAC;EAC9B,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;;EAEvD;EACA,MAAMC,eAAe,GAAG,CAAC,CAACF,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAEvD,OAAOC,eAAe,gBAAGC,OAAA,CAACC,eAAe;IAACP,KAAK,EAAEA;EAAM;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,gBAAGL,OAAA,CAACM,YAAY;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC/E,CAAC;AAACd,EAAA,CARID,OAAO;AAAAiB,EAAA,GAAPjB,OAAO;AAUb,eAAeA,OAAO;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}