{"ast":null,"code":"import { createSlice, createReducer, createAsyncThunk } from \"@reduxjs/toolkit\";\n// // import { DispatchLogin } from \"../../../Layout/Auth/Login\";\nimport { LOGIN } from \"../../../Service/auth.service\";\nexport const Login = createAsyncThunk(\"auth/login\", async data => {\n  const {\n    user_id,\n    token\n  } = data;\n  try {\n    const res = await LOGIN({\n      _id: user_id\n    }, token);\n    return await res;\n  } catch (err) {\n    return err;\n  }\n});\nconst AuthSlice = createSlice({\n  name: \"AuthSlice\",\n  initialState: {\n    isLoading: false,\n    isError: false,\n    helps: [],\n    status: false\n  },\n  recuders: {},\n  extraReducers: builder => {\n    builder.addCase(Login.pending, (state, action) => {\n      // Handle pending action\n      state.isLoading = true;\n    }).addCase(Login.fulfilled, (state, action) => {\n      // Handle fulfilled action\n      state.helps = action.payload;\n      state.isLoading = false;\n    }).addCase(Login.rejected, (state, action) => {\n      // Handle rejected action\n      state.isLoading = false;\n      // Handle error state if needed\n    });\n  }\n});\nexport default AuthSlice;\n\n// const initialState = {\n//   isLoading: false,\n//   isError: false,\n//   auth_Info: [],\n//   status: false,\n// };\n\n// const loginReducer = createReducer(initialState, (builder) => {\n//   builder\n//     .addCase(Login.pending, (state, action) => {\n//       return { ...state, auth_Info: [], isLoading: true };\n//     })\n//     .addCase(Login.fulfilled, (state, action) => {\n//       return { ...state, auth_Info: action.payload, isLoading: false };\n//     })\n//     .addCase(Login.rejected, (state, action) => {\n//       return { ...state, auth_Info: [], isLoading: false };\n//     });\n// });\n\n// export default loginReducer;","map":{"version":3,"names":["createSlice","createReducer","createAsyncThunk","LOGIN","Login","data","user_id","token","res","_id","err","AuthSlice","name","initialState","isLoading","isError","helps","status","recuders","extraReducers","builder","addCase","pending","state","action","fulfilled","payload","rejected"],"sources":["D:/Gaming/gaming/frontend/src/Components/Redux/Slice/Auth/auth.slice.js"],"sourcesContent":["import { createSlice, createReducer, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n// // import { DispatchLogin } from \"../../../Layout/Auth/Login\";\r\nimport { LOGIN } from \"../../../Service/auth.service\";\r\n\r\nexport const Login = createAsyncThunk(\"auth/login\", async (data) => {\r\n  const { user_id, token } = data;\r\n\r\n  try {\r\n    const res = await LOGIN({ _id: user_id }, token);\r\n    return await res;\r\n  } catch (err) {\r\n    return err;\r\n  }\r\n});\r\n\r\nconst AuthSlice = createSlice({\r\n  name: \"AuthSlice\",\r\n  initialState: {\r\n    isLoading: false,\r\n    isError: false,\r\n    helps: [],\r\n    status: false,\r\n  },\r\n\r\n  recuders: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(Login.pending, (state, action) => {\r\n        // Handle pending action\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(Login.fulfilled, (state, action) => {\r\n        // Handle fulfilled action\r\n        state.helps = action.payload;\r\n        state.isLoading = false;\r\n      })\r\n      .addCase(Login.rejected, (state, action) => {\r\n        // Handle rejected action\r\n        state.isLoading = false;\r\n        // Handle error state if needed\r\n      });\r\n  },\r\n});\r\n\r\nexport default AuthSlice;\r\n\r\n// const initialState = {\r\n//   isLoading: false,\r\n//   isError: false,\r\n//   auth_Info: [],\r\n//   status: false,\r\n// };\r\n\r\n// const loginReducer = createReducer(initialState, (builder) => {\r\n//   builder\r\n//     .addCase(Login.pending, (state, action) => {\r\n//       return { ...state, auth_Info: [], isLoading: true };\r\n//     })\r\n//     .addCase(Login.fulfilled, (state, action) => {\r\n//       return { ...state, auth_Info: action.payload, isLoading: false };\r\n//     })\r\n//     .addCase(Login.rejected, (state, action) => {\r\n//       return { ...state, auth_Info: [], isLoading: false };\r\n//     });\r\n// });\r\n\r\n// export default loginReducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,aAAa,EAAEC,gBAAgB,QAAQ,kBAAkB;AAC/E;AACA,SAASC,KAAK,QAAQ,+BAA+B;AAErD,OAAO,MAAMC,KAAK,GAAGF,gBAAgB,CAAC,YAAY,EAAE,MAAOG,IAAI,IAAK;EAClE,MAAM;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGF,IAAI;EAE/B,IAAI;IACF,MAAMG,GAAG,GAAG,MAAML,KAAK,CAAC;MAAEM,GAAG,EAAEH;IAAQ,CAAC,EAAEC,KAAK,CAAC;IAChD,OAAO,MAAMC,GAAG;EAClB,CAAC,CAAC,OAAOE,GAAG,EAAE;IACZ,OAAOA,GAAG;EACZ;AACF,CAAC,CAAC;AAEF,MAAMC,SAAS,GAAGX,WAAW,CAAC;EAC5BY,IAAI,EAAE,WAAW;EACjBC,YAAY,EAAE;IACZC,SAAS,EAAE,KAAK;IAChBC,OAAO,EAAE,KAAK;IACdC,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE;EACV,CAAC;EAEDC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACjB,KAAK,CAACkB,OAAO,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACzC;MACAD,KAAK,CAACT,SAAS,GAAG,IAAI;IACxB,CAAC,CAAC,CACDO,OAAO,CAACjB,KAAK,CAACqB,SAAS,EAAE,CAACF,KAAK,EAAEC,MAAM,KAAK;MAC3C;MACAD,KAAK,CAACP,KAAK,GAAGQ,MAAM,CAACE,OAAO;MAC5BH,KAAK,CAACT,SAAS,GAAG,KAAK;IACzB,CAAC,CAAC,CACDO,OAAO,CAACjB,KAAK,CAACuB,QAAQ,EAAE,CAACJ,KAAK,EAAEC,MAAM,KAAK;MAC1C;MACAD,KAAK,CAACT,SAAS,GAAG,KAAK;MACvB;IACF,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAeH,SAAS;;AAExB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}