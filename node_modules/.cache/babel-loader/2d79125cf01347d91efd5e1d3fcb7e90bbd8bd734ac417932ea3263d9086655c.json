{"ast":null,"code":"var _jsxFileName = \"D:\\\\Gaming\\\\gaming\\\\frontend\\\\src\\\\Components\\\\Routes\\\\Routing.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { Route, Routes, useLocation, useNavigate } from \"react-router-dom\";\n// import Admin from \"./Admin\";\nimport SuperAdmin from \"./Superadmin\";\nimport Admin from \"./Admin\";\nimport Users from \"./User\";\nimport Wraper from \"../Pages/Users/Wraper/Wraper\";\nimport Login from \"../Pages/Auth/Auth\";\nimport SignUpUser from \"../Pages/Auth/SignUpUser\";\nimport Otp from \"../Pages/Auth/OtpProcess\";\nimport ForgotPassword from \"../Pages/Auth/ForgotPassword\";\nimport ProtectedRoutes from \"./ProtectedRoute\";\nimport PublicRoutes from \"./PublicRoutes\";\n\n// // import NotFound from \"../Layout/NotFound\"\n\n// const Routing = () => {\n//   const location = useLocation();\n\n//   const navigate = useNavigate();\n//   const roles = JSON.parse(localStorage.getItem(\"roles\"));\n//   const accessToken = localStorage.getItem(\"token\");\n\n//   return (\n//     <>\n//       <Routes>\n//         <Route\n//           path=\"/super/*\"\n//           element={roles === 0 ? <SuperAdmin /> : <Wraper />}\n//         />\n//         {/* <Route path=\"/admin/*\" element={roles === 1  ? <Admin /> : <Wraper/>} /> */}\n//         <Route path=\"/*\" element={roles === 2 ? <Users /> : <Wraper />} />\n//         <Route path=\"/login\" element={<Login />} />\n//         <Route path=\"/signup\" element={<SignUpUser />} />\n//         <Route path=\"/verifyotp\" element={<Otp />} />\n//         <Route path=\"/forgetpassword\" element={<ForgotPassword />} />\n//       </Routes>\n//     </>\n//   );\n// };\n\n// export default Routing;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Routing = () => {\n  _s();\n  const location = useLocation();\n  const roles = JSON.parse(localStorage.getItem(\"roles\"));\n\n  // Check if user is authenticated\n  const isAuthenticated = !!localStorage.getItem(\"token\");\n  return isAuthenticated ? /*#__PURE__*/_jsxDEV(ProtectedRoutes, {\n    roles: roles\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 28\n  }, this) : /*#__PURE__*/_jsxDEV(PublicRoutes, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 64\n  }, this);\n};\n_s(Routing, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = Routing;\nexport default Routing;\nvar _c;\n$RefreshReg$(_c, \"Routing\");","map":{"version":3,"names":["React","useEffect","Route","Routes","useLocation","useNavigate","SuperAdmin","Admin","Users","Wraper","Login","SignUpUser","Otp","ForgotPassword","ProtectedRoutes","PublicRoutes","jsxDEV","_jsxDEV","Routing","_s","location","roles","JSON","parse","localStorage","getItem","isAuthenticated","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Gaming/gaming/frontend/src/Components/Routes/Routing.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Route, Routes, useLocation, useNavigate } from \"react-router-dom\";\r\n// import Admin from \"./Admin\";\r\nimport SuperAdmin from \"./Superadmin\";\r\nimport Admin from \"./Admin\";\r\nimport Users from \"./User\";\r\nimport Wraper from \"../Pages/Users/Wraper/Wraper\";\r\n\r\nimport Login from \"../Pages/Auth/Auth\";\r\nimport SignUpUser from \"../Pages/Auth/SignUpUser\";\r\nimport Otp from \"../Pages/Auth/OtpProcess\";\r\nimport ForgotPassword from \"../Pages/Auth/ForgotPassword\";\r\n\r\nimport ProtectedRoutes from \"./ProtectedRoute\";\r\nimport PublicRoutes from \"./PublicRoutes\";\r\n\r\n\r\n// // import NotFound from \"../Layout/NotFound\"\r\n\r\n// const Routing = () => {\r\n//   const location = useLocation();\r\n\r\n//   const navigate = useNavigate();\r\n//   const roles = JSON.parse(localStorage.getItem(\"roles\"));\r\n//   const accessToken = localStorage.getItem(\"token\");\r\n\r\n//   return (\r\n//     <>\r\n//       <Routes>\r\n//         <Route\r\n//           path=\"/super/*\"\r\n//           element={roles === 0 ? <SuperAdmin /> : <Wraper />}\r\n//         />\r\n//         {/* <Route path=\"/admin/*\" element={roles === 1  ? <Admin /> : <Wraper/>} /> */}\r\n//         <Route path=\"/*\" element={roles === 2 ? <Users /> : <Wraper />} />\r\n//         <Route path=\"/login\" element={<Login />} />\r\n//         <Route path=\"/signup\" element={<SignUpUser />} />\r\n//         <Route path=\"/verifyotp\" element={<Otp />} />\r\n//         <Route path=\"/forgetpassword\" element={<ForgotPassword />} />\r\n//       </Routes>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default Routing;\r\n\r\n\r\n\r\nconst Routing = () => {\r\n  const location = useLocation();\r\n  const roles = JSON.parse(localStorage.getItem(\"roles\"));\r\n\r\n  // Check if user is authenticated\r\n  const isAuthenticated = !!localStorage.getItem(\"token\");\r\n\r\n\r\n\r\n  \r\n\r\n  return isAuthenticated ? <ProtectedRoutes roles={roles} /> : <PublicRoutes />;\r\n};\r\n\r\nexport default Routing;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,KAAK,EAAEC,MAAM,EAAEC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC1E;AACA,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,KAAK,MAAM,QAAQ;AAC1B,OAAOC,MAAM,MAAM,8BAA8B;AAEjD,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,GAAG,MAAM,0BAA0B;AAC1C,OAAOC,cAAc,MAAM,8BAA8B;AAEzD,OAAOC,eAAe,MAAM,kBAAkB;AAC9C,OAAOC,YAAY,MAAM,gBAAgB;;AAGzC;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAIA,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,QAAQ,GAAGhB,WAAW,CAAC,CAAC;EAC9B,MAAMiB,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;;EAEvD;EACA,MAAMC,eAAe,GAAG,CAAC,CAACF,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAMvD,OAAOC,eAAe,gBAAGT,OAAA,CAACH,eAAe;IAACO,KAAK,EAAEA;EAAM;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,gBAAGb,OAAA,CAACF,YAAY;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC/E,CAAC;AAACX,EAAA,CAZID,OAAO;EAAA,QACMd,WAAW;AAAA;AAAA2B,EAAA,GADxBb,OAAO;AAcb,eAAeA,OAAO;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}